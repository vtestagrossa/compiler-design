Grammar

    0 $accept: function $end

    1 function: function_header optional_variable body

    2 function_header: FUNCTION IDENTIFIER parameters RETURNS type ';'
    3                | error ';'

    4 parameters: parameter optional_parameter
    5           | ε

    6 parameter: IDENTIFIER ':' type

    7 optional_parameter: optional_parameter ',' parameter
    8                   | ε

    9 optional_variable: optional_variable variable
   10                  | ε

   11 variable: IDENTIFIER ':' type IS statement_

   12 type: INTEGER
   13     | BOOLEAN
   14     | REAL

   15 body: BEGIN_ statement_ END ';'

   16 statement_: statement ';'
   17           | error ';'

   18 statement: expression
   19          | REDUCE operator reductions ENDREDUCE
   20          | IF expression THEN statement_ ELSE statement_ ENDIF
   21          | CASE expression IS optional_case OTHERS ARROW statement_ ENDCASE

   22 optional_case: optional_case WHEN INT_LITERAL ARROW statement_
   23              | ε

   24 operator: ADDOP
   25         | MULOP
   26         | REMOP
   27         | EXPOP
   28         | OROP
   29         | ANDOP

   30 reductions: reductions statement_
   31           | ε

   32 expression: or_expression

   33 or_expression: or_expression OROP and_expression
   34              | and_expression

   35 and_expression: and_expression ANDOP not_expression
   36               | not_expression

   37 not_expression: NOTOP not_expression
   38               | relation

   39 relation: relation RELOP term
   40         | term

   41 term: term ADDOP factor
   42     | factor

   43 factor: factor MULOP exponent
   44       | factor REMOP exponent
   45       | exponent

   46 exponent: exponent EXPOP primary
   47         | primary

   48 primary: '(' expression ')'
   49        | INT_LITERAL
   50        | REAL_LITERAL
   51        | BOOL_LITERAL
   52        | IDENTIFIER


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 48
    ')' (41) 48
    ',' (44) 7
    ':' (58) 6 11
    ';' (59) 2 3 15 16 17
    error (256) 3 17
    IDENTIFIER (258) 2 6 11 52
    INT_LITERAL (259) 22 49
    REAL_LITERAL (260) 50
    BOOL_LITERAL (261) 51
    ADDOP (262) 24 41
    MULOP (263) 25 43
    RELOP (264) 39
    ANDOP (265) 29 35
    OROP (266) 28 33
    NOTOP (267) 37
    ARROW (268) 21 22
    EXPOP (269) 27 46
    REMOP (270) 26 44
    BEGIN_ (271) 15
    BOOLEAN (272) 13
    END (273) 15
    ENDREDUCE (274) 19
    FUNCTION (275) 2
    INTEGER (276) 12
    IS (277) 11 21
    REDUCE (278) 19
    RETURNS (279) 2
    IF (280) 20
    ELSE (281) 20
    THEN (282) 20
    ENDIF (283) 20
    CASE (284) 21
    ENDCASE (285) 21
    OTHERS (286) 21
    REAL (287) 14
    WHEN (288) 22


Nonterminals, with rules where they appear

    $accept (39)
        on left: 0
    function (40)
        on left: 1
        on right: 0
    function_header (41)
        on left: 2 3
        on right: 1
    parameters (42)
        on left: 4 5
        on right: 2
    parameter (43)
        on left: 6
        on right: 4 7
    optional_parameter (44)
        on left: 7 8
        on right: 4 7
    optional_variable (45)
        on left: 9 10
        on right: 1 9
    variable (46)
        on left: 11
        on right: 9
    type (47)
        on left: 12 13 14
        on right: 2 6 11
    body (48)
        on left: 15
        on right: 1
    statement_ (49)
        on left: 16 17
        on right: 11 15 20 21 22 30
    statement (50)
        on left: 18 19 20 21
        on right: 16
    optional_case (51)
        on left: 22 23
        on right: 21 22
    operator (52)
        on left: 24 25 26 27 28 29
        on right: 19
    reductions (53)
        on left: 30 31
        on right: 19 30
    expression (54)
        on left: 32
        on right: 18 20 21 48
    or_expression (55)
        on left: 33 34
        on right: 32 33
    and_expression (56)
        on left: 35 36
        on right: 33 34 35
    not_expression (57)
        on left: 37 38
        on right: 35 36 37
    relation (58)
        on left: 39 40
        on right: 38 39
    term (59)
        on left: 41 42
        on right: 39 40 41
    factor (60)
        on left: 43 44 45
        on right: 41 42 43 44
    exponent (61)
        on left: 46 47
        on right: 43 44 45 46
    primary (62)
        on left: 48 49 50 51 52
        on right: 46 47


State 0

    0 $accept: • function $end

    error     shift, and go to state 1
    FUNCTION  shift, and go to state 2

    function         go to state 3
    function_header  go to state 4


State 1

    3 function_header: error • ';'

    ';'  shift, and go to state 5


State 2

    2 function_header: FUNCTION • IDENTIFIER parameters RETURNS type ';'

    IDENTIFIER  shift, and go to state 6


State 3

    0 $accept: function • $end

    $end  shift, and go to state 7


State 4

    1 function: function_header • optional_variable body

    $default  reduce using rule 10 (optional_variable)

    optional_variable  go to state 8


State 5

    3 function_header: error ';' •

    $default  reduce using rule 3 (function_header)


State 6

    2 function_header: FUNCTION IDENTIFIER • parameters RETURNS type ';'

    IDENTIFIER  shift, and go to state 9

    $default  reduce using rule 5 (parameters)

    parameters  go to state 10
    parameter   go to state 11


State 7

    0 $accept: function $end •

    $default  accept


State 8

    1 function: function_header optional_variable • body
    9 optional_variable: optional_variable • variable

    IDENTIFIER  shift, and go to state 12
    BEGIN_      shift, and go to state 13

    variable  go to state 14
    body      go to state 15


State 9

    6 parameter: IDENTIFIER • ':' type

    ':'  shift, and go to state 16


State 10

    2 function_header: FUNCTION IDENTIFIER parameters • RETURNS type ';'

    RETURNS  shift, and go to state 17


State 11

    4 parameters: parameter • optional_parameter

    $default  reduce using rule 8 (optional_parameter)

    optional_parameter  go to state 18


State 12

   11 variable: IDENTIFIER • ':' type IS statement_

    ':'  shift, and go to state 19


State 13

   15 body: BEGIN_ • statement_ END ';'

    error         shift, and go to state 20
    IDENTIFIER    shift, and go to state 21
    INT_LITERAL   shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    BOOL_LITERAL  shift, and go to state 24
    NOTOP         shift, and go to state 25
    REDUCE        shift, and go to state 26
    IF            shift, and go to state 27
    CASE          shift, and go to state 28
    '('           shift, and go to state 29

    statement_      go to state 30
    statement       go to state 31
    expression      go to state 32
    or_expression   go to state 33
    and_expression  go to state 34
    not_expression  go to state 35
    relation        go to state 36
    term            go to state 37
    factor          go to state 38
    exponent        go to state 39
    primary         go to state 40


State 14

    9 optional_variable: optional_variable variable •

    $default  reduce using rule 9 (optional_variable)


State 15

    1 function: function_header optional_variable body •

    $default  reduce using rule 1 (function)


State 16

    6 parameter: IDENTIFIER ':' • type

    BOOLEAN  shift, and go to state 41
    INTEGER  shift, and go to state 42
    REAL     shift, and go to state 43

    type  go to state 44


State 17

    2 function_header: FUNCTION IDENTIFIER parameters RETURNS • type ';'

    BOOLEAN  shift, and go to state 41
    INTEGER  shift, and go to state 42
    REAL     shift, and go to state 43

    type  go to state 45


State 18

    4 parameters: parameter optional_parameter •
    7 optional_parameter: optional_parameter • ',' parameter

    ','  shift, and go to state 46

    $default  reduce using rule 4 (parameters)


State 19

   11 variable: IDENTIFIER ':' • type IS statement_

    BOOLEAN  shift, and go to state 41
    INTEGER  shift, and go to state 42
    REAL     shift, and go to state 43

    type  go to state 47


State 20

   17 statement_: error • ';'

    ';'  shift, and go to state 48


State 21

   52 primary: IDENTIFIER •

    $default  reduce using rule 52 (primary)


State 22

   49 primary: INT_LITERAL •

    $default  reduce using rule 49 (primary)


State 23

   50 primary: REAL_LITERAL •

    $default  reduce using rule 50 (primary)


State 24

   51 primary: BOOL_LITERAL •

    $default  reduce using rule 51 (primary)


State 25

   37 not_expression: NOTOP • not_expression

    IDENTIFIER    shift, and go to state 21
    INT_LITERAL   shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    BOOL_LITERAL  shift, and go to state 24
    NOTOP         shift, and go to state 25
    '('           shift, and go to state 29

    not_expression  go to state 49
    relation        go to state 36
    term            go to state 37
    factor          go to state 38
    exponent        go to state 39
    primary         go to state 40


State 26

   19 statement: REDUCE • operator reductions ENDREDUCE

    ADDOP  shift, and go to state 50
    MULOP  shift, and go to state 51
    ANDOP  shift, and go to state 52
    OROP   shift, and go to state 53
    EXPOP  shift, and go to state 54
    REMOP  shift, and go to state 55

    operator  go to state 56


State 27

   20 statement: IF • expression THEN statement_ ELSE statement_ ENDIF

    IDENTIFIER    shift, and go to state 21
    INT_LITERAL   shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    BOOL_LITERAL  shift, and go to state 24
    NOTOP         shift, and go to state 25
    '('           shift, and go to state 29

    expression      go to state 57
    or_expression   go to state 33
    and_expression  go to state 34
    not_expression  go to state 35
    relation        go to state 36
    term            go to state 37
    factor          go to state 38
    exponent        go to state 39
    primary         go to state 40


State 28

   21 statement: CASE • expression IS optional_case OTHERS ARROW statement_ ENDCASE

    IDENTIFIER    shift, and go to state 21
    INT_LITERAL   shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    BOOL_LITERAL  shift, and go to state 24
    NOTOP         shift, and go to state 25
    '('           shift, and go to state 29

    expression      go to state 58
    or_expression   go to state 33
    and_expression  go to state 34
    not_expression  go to state 35
    relation        go to state 36
    term            go to state 37
    factor          go to state 38
    exponent        go to state 39
    primary         go to state 40


State 29

   48 primary: '(' • expression ')'

    IDENTIFIER    shift, and go to state 21
    INT_LITERAL   shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    BOOL_LITERAL  shift, and go to state 24
    NOTOP         shift, and go to state 25
    '('           shift, and go to state 29

    expression      go to state 59
    or_expression   go to state 33
    and_expression  go to state 34
    not_expression  go to state 35
    relation        go to state 36
    term            go to state 37
    factor          go to state 38
    exponent        go to state 39
    primary         go to state 40


State 30

   15 body: BEGIN_ statement_ • END ';'

    END  shift, and go to state 60


State 31

   16 statement_: statement • ';'

    ';'  shift, and go to state 61


State 32

   18 statement: expression •

    $default  reduce using rule 18 (statement)


State 33

   32 expression: or_expression •
   33 or_expression: or_expression • OROP and_expression

    OROP  shift, and go to state 62

    $default  reduce using rule 32 (expression)


State 34

   34 or_expression: and_expression •
   35 and_expression: and_expression • ANDOP not_expression

    ANDOP  shift, and go to state 63

    $default  reduce using rule 34 (or_expression)


State 35

   36 and_expression: not_expression •

    $default  reduce using rule 36 (and_expression)


State 36

   38 not_expression: relation •
   39 relation: relation • RELOP term

    RELOP  shift, and go to state 64

    $default  reduce using rule 38 (not_expression)


State 37

   40 relation: term •
   41 term: term • ADDOP factor

    ADDOP  shift, and go to state 65

    $default  reduce using rule 40 (relation)


State 38

   42 term: factor •
   43 factor: factor • MULOP exponent
   44       | factor • REMOP exponent

    MULOP  shift, and go to state 66
    REMOP  shift, and go to state 67

    $default  reduce using rule 42 (term)


State 39

   45 factor: exponent •
   46 exponent: exponent • EXPOP primary

    EXPOP  shift, and go to state 68

    $default  reduce using rule 45 (factor)


State 40

   47 exponent: primary •

    $default  reduce using rule 47 (exponent)


State 41

   13 type: BOOLEAN •

    $default  reduce using rule 13 (type)


State 42

   12 type: INTEGER •

    $default  reduce using rule 12 (type)


State 43

   14 type: REAL •

    $default  reduce using rule 14 (type)


State 44

    6 parameter: IDENTIFIER ':' type •

    $default  reduce using rule 6 (parameter)


State 45

    2 function_header: FUNCTION IDENTIFIER parameters RETURNS type • ';'

    ';'  shift, and go to state 69


State 46

    7 optional_parameter: optional_parameter ',' • parameter

    IDENTIFIER  shift, and go to state 9

    parameter  go to state 70


State 47

   11 variable: IDENTIFIER ':' type • IS statement_

    IS  shift, and go to state 71


State 48

   17 statement_: error ';' •

    $default  reduce using rule 17 (statement_)


State 49

   37 not_expression: NOTOP not_expression •

    $default  reduce using rule 37 (not_expression)


State 50

   24 operator: ADDOP •

    $default  reduce using rule 24 (operator)


State 51

   25 operator: MULOP •

    $default  reduce using rule 25 (operator)


State 52

   29 operator: ANDOP •

    $default  reduce using rule 29 (operator)


State 53

   28 operator: OROP •

    $default  reduce using rule 28 (operator)


State 54

   27 operator: EXPOP •

    $default  reduce using rule 27 (operator)


State 55

   26 operator: REMOP •

    $default  reduce using rule 26 (operator)


State 56

   19 statement: REDUCE operator • reductions ENDREDUCE

    $default  reduce using rule 31 (reductions)

    reductions  go to state 72


State 57

   20 statement: IF expression • THEN statement_ ELSE statement_ ENDIF

    THEN  shift, and go to state 73


State 58

   21 statement: CASE expression • IS optional_case OTHERS ARROW statement_ ENDCASE

    IS  shift, and go to state 74


State 59

   48 primary: '(' expression • ')'

    ')'  shift, and go to state 75


State 60

   15 body: BEGIN_ statement_ END • ';'

    ';'  shift, and go to state 76


State 61

   16 statement_: statement ';' •

    $default  reduce using rule 16 (statement_)


State 62

   33 or_expression: or_expression OROP • and_expression

    IDENTIFIER    shift, and go to state 21
    INT_LITERAL   shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    BOOL_LITERAL  shift, and go to state 24
    NOTOP         shift, and go to state 25
    '('           shift, and go to state 29

    and_expression  go to state 77
    not_expression  go to state 35
    relation        go to state 36
    term            go to state 37
    factor          go to state 38
    exponent        go to state 39
    primary         go to state 40


State 63

   35 and_expression: and_expression ANDOP • not_expression

    IDENTIFIER    shift, and go to state 21
    INT_LITERAL   shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    BOOL_LITERAL  shift, and go to state 24
    NOTOP         shift, and go to state 25
    '('           shift, and go to state 29

    not_expression  go to state 78
    relation        go to state 36
    term            go to state 37
    factor          go to state 38
    exponent        go to state 39
    primary         go to state 40


State 64

   39 relation: relation RELOP • term

    IDENTIFIER    shift, and go to state 21
    INT_LITERAL   shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    BOOL_LITERAL  shift, and go to state 24
    '('           shift, and go to state 29

    term      go to state 79
    factor    go to state 38
    exponent  go to state 39
    primary   go to state 40


State 65

   41 term: term ADDOP • factor

    IDENTIFIER    shift, and go to state 21
    INT_LITERAL   shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    BOOL_LITERAL  shift, and go to state 24
    '('           shift, and go to state 29

    factor    go to state 80
    exponent  go to state 39
    primary   go to state 40


State 66

   43 factor: factor MULOP • exponent

    IDENTIFIER    shift, and go to state 21
    INT_LITERAL   shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    BOOL_LITERAL  shift, and go to state 24
    '('           shift, and go to state 29

    exponent  go to state 81
    primary   go to state 40


State 67

   44 factor: factor REMOP • exponent

    IDENTIFIER    shift, and go to state 21
    INT_LITERAL   shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    BOOL_LITERAL  shift, and go to state 24
    '('           shift, and go to state 29

    exponent  go to state 82
    primary   go to state 40


State 68

   46 exponent: exponent EXPOP • primary

    IDENTIFIER    shift, and go to state 21
    INT_LITERAL   shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    BOOL_LITERAL  shift, and go to state 24
    '('           shift, and go to state 29

    primary  go to state 83


State 69

    2 function_header: FUNCTION IDENTIFIER parameters RETURNS type ';' •

    $default  reduce using rule 2 (function_header)


State 70

    7 optional_parameter: optional_parameter ',' parameter •

    $default  reduce using rule 7 (optional_parameter)


State 71

   11 variable: IDENTIFIER ':' type IS • statement_

    error         shift, and go to state 20
    IDENTIFIER    shift, and go to state 21
    INT_LITERAL   shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    BOOL_LITERAL  shift, and go to state 24
    NOTOP         shift, and go to state 25
    REDUCE        shift, and go to state 26
    IF            shift, and go to state 27
    CASE          shift, and go to state 28
    '('           shift, and go to state 29

    statement_      go to state 84
    statement       go to state 31
    expression      go to state 32
    or_expression   go to state 33
    and_expression  go to state 34
    not_expression  go to state 35
    relation        go to state 36
    term            go to state 37
    factor          go to state 38
    exponent        go to state 39
    primary         go to state 40


State 72

   19 statement: REDUCE operator reductions • ENDREDUCE
   30 reductions: reductions • statement_

    error         shift, and go to state 20
    IDENTIFIER    shift, and go to state 21
    INT_LITERAL   shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    BOOL_LITERAL  shift, and go to state 24
    NOTOP         shift, and go to state 25
    ENDREDUCE     shift, and go to state 85
    REDUCE        shift, and go to state 26
    IF            shift, and go to state 27
    CASE          shift, and go to state 28
    '('           shift, and go to state 29

    statement_      go to state 86
    statement       go to state 31
    expression      go to state 32
    or_expression   go to state 33
    and_expression  go to state 34
    not_expression  go to state 35
    relation        go to state 36
    term            go to state 37
    factor          go to state 38
    exponent        go to state 39
    primary         go to state 40


State 73

   20 statement: IF expression THEN • statement_ ELSE statement_ ENDIF

    error         shift, and go to state 20
    IDENTIFIER    shift, and go to state 21
    INT_LITERAL   shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    BOOL_LITERAL  shift, and go to state 24
    NOTOP         shift, and go to state 25
    REDUCE        shift, and go to state 26
    IF            shift, and go to state 27
    CASE          shift, and go to state 28
    '('           shift, and go to state 29

    statement_      go to state 87
    statement       go to state 31
    expression      go to state 32
    or_expression   go to state 33
    and_expression  go to state 34
    not_expression  go to state 35
    relation        go to state 36
    term            go to state 37
    factor          go to state 38
    exponent        go to state 39
    primary         go to state 40


State 74

   21 statement: CASE expression IS • optional_case OTHERS ARROW statement_ ENDCASE

    $default  reduce using rule 23 (optional_case)

    optional_case  go to state 88


State 75

   48 primary: '(' expression ')' •

    $default  reduce using rule 48 (primary)


State 76

   15 body: BEGIN_ statement_ END ';' •

    $default  reduce using rule 15 (body)


State 77

   33 or_expression: or_expression OROP and_expression •
   35 and_expression: and_expression • ANDOP not_expression

    ANDOP  shift, and go to state 63

    $default  reduce using rule 33 (or_expression)


State 78

   35 and_expression: and_expression ANDOP not_expression •

    $default  reduce using rule 35 (and_expression)


State 79

   39 relation: relation RELOP term •
   41 term: term • ADDOP factor

    ADDOP  shift, and go to state 65

    $default  reduce using rule 39 (relation)


State 80

   41 term: term ADDOP factor •
   43 factor: factor • MULOP exponent
   44       | factor • REMOP exponent

    MULOP  shift, and go to state 66
    REMOP  shift, and go to state 67

    $default  reduce using rule 41 (term)


State 81

   43 factor: factor MULOP exponent •
   46 exponent: exponent • EXPOP primary

    EXPOP  shift, and go to state 68

    $default  reduce using rule 43 (factor)


State 82

   44 factor: factor REMOP exponent •
   46 exponent: exponent • EXPOP primary

    EXPOP  shift, and go to state 68

    $default  reduce using rule 44 (factor)


State 83

   46 exponent: exponent EXPOP primary •

    $default  reduce using rule 46 (exponent)


State 84

   11 variable: IDENTIFIER ':' type IS statement_ •

    $default  reduce using rule 11 (variable)


State 85

   19 statement: REDUCE operator reductions ENDREDUCE •

    $default  reduce using rule 19 (statement)


State 86

   30 reductions: reductions statement_ •

    $default  reduce using rule 30 (reductions)


State 87

   20 statement: IF expression THEN statement_ • ELSE statement_ ENDIF

    ELSE  shift, and go to state 89


State 88

   21 statement: CASE expression IS optional_case • OTHERS ARROW statement_ ENDCASE
   22 optional_case: optional_case • WHEN INT_LITERAL ARROW statement_

    OTHERS  shift, and go to state 90
    WHEN    shift, and go to state 91


State 89

   20 statement: IF expression THEN statement_ ELSE • statement_ ENDIF

    error         shift, and go to state 20
    IDENTIFIER    shift, and go to state 21
    INT_LITERAL   shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    BOOL_LITERAL  shift, and go to state 24
    NOTOP         shift, and go to state 25
    REDUCE        shift, and go to state 26
    IF            shift, and go to state 27
    CASE          shift, and go to state 28
    '('           shift, and go to state 29

    statement_      go to state 92
    statement       go to state 31
    expression      go to state 32
    or_expression   go to state 33
    and_expression  go to state 34
    not_expression  go to state 35
    relation        go to state 36
    term            go to state 37
    factor          go to state 38
    exponent        go to state 39
    primary         go to state 40


State 90

   21 statement: CASE expression IS optional_case OTHERS • ARROW statement_ ENDCASE

    ARROW  shift, and go to state 93


State 91

   22 optional_case: optional_case WHEN • INT_LITERAL ARROW statement_

    INT_LITERAL  shift, and go to state 94


State 92

   20 statement: IF expression THEN statement_ ELSE statement_ • ENDIF

    ENDIF  shift, and go to state 95


State 93

   21 statement: CASE expression IS optional_case OTHERS ARROW • statement_ ENDCASE

    error         shift, and go to state 20
    IDENTIFIER    shift, and go to state 21
    INT_LITERAL   shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    BOOL_LITERAL  shift, and go to state 24
    NOTOP         shift, and go to state 25
    REDUCE        shift, and go to state 26
    IF            shift, and go to state 27
    CASE          shift, and go to state 28
    '('           shift, and go to state 29

    statement_      go to state 96
    statement       go to state 31
    expression      go to state 32
    or_expression   go to state 33
    and_expression  go to state 34
    not_expression  go to state 35
    relation        go to state 36
    term            go to state 37
    factor          go to state 38
    exponent        go to state 39
    primary         go to state 40


State 94

   22 optional_case: optional_case WHEN INT_LITERAL • ARROW statement_

    ARROW  shift, and go to state 97


State 95

   20 statement: IF expression THEN statement_ ELSE statement_ ENDIF •

    $default  reduce using rule 20 (statement)


State 96

   21 statement: CASE expression IS optional_case OTHERS ARROW statement_ • ENDCASE

    ENDCASE  shift, and go to state 98


State 97

   22 optional_case: optional_case WHEN INT_LITERAL ARROW • statement_

    error         shift, and go to state 20
    IDENTIFIER    shift, and go to state 21
    INT_LITERAL   shift, and go to state 22
    REAL_LITERAL  shift, and go to state 23
    BOOL_LITERAL  shift, and go to state 24
    NOTOP         shift, and go to state 25
    REDUCE        shift, and go to state 26
    IF            shift, and go to state 27
    CASE          shift, and go to state 28
    '('           shift, and go to state 29

    statement_      go to state 99
    statement       go to state 31
    expression      go to state 32
    or_expression   go to state 33
    and_expression  go to state 34
    not_expression  go to state 35
    relation        go to state 36
    term            go to state 37
    factor          go to state 38
    exponent        go to state 39
    primary         go to state 40


State 98

   21 statement: CASE expression IS optional_case OTHERS ARROW statement_ ENDCASE •

    $default  reduce using rule 21 (statement)


State 99

   22 optional_case: optional_case WHEN INT_LITERAL ARROW statement_ •

    $default  reduce using rule 22 (optional_case)
