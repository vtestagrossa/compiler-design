Terminals unused in grammar

    OROP
    NOTOP
    EXPOP
    REMOP


Grammar

    0 $accept: function $end

    1 function: function_header optional_variable body

    2 function_header: FUNCTION IDENTIFIER parameters RETURNS type ';'

    3 parameters: parameter optional_parameter
    4           | ε

    5 parameter: IDENTIFIER ':' type

    6 optional_parameter: optional_parameter ',' parameter
    7                   | ε

    8 optional_variable: optional_variable variable
    9                  | ε

   10 variable: IDENTIFIER ':' type IS statement_

   11 type: INTEGER
   12     | BOOLEAN
   13     | REAL

   14 body: BEGIN_ statement_ END ';'

   15 statement_: statement ';'
   16           | error ';'

   17 statement: expression
   18          | REDUCE operator reductions ENDREDUCE
   19          | IF expression THEN statement_ ELSE statement_ ENDIF
   20          | CASE expression IS optional_case OTHERS ARROW statement_ ENDCASE

   21 optional_case: optional_case WHEN INT_LITERAL ARROW statement_
   22              | ε

   23 operator: ADDOP
   24         | MULOP

   25 reductions: reductions statement_
   26           | ε

   27 expression: expression ANDOP relation
   28           | relation

   29 relation: relation RELOP term
   30         | term

   31 term: term ADDOP factor
   32     | factor

   33 factor: factor MULOP primary
   34       | primary

   35 primary: '(' expression ')'
   36        | INT_LITERAL
   37        | REAL_LITERAL
   38        | BOOL_LITERAL
   39        | IDENTIFIER


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 35
    ')' (41) 35
    ',' (44) 6
    ':' (58) 5 10
    ';' (59) 2 14 15 16
    error (256) 16
    IDENTIFIER (258) 2 5 10 39
    INT_LITERAL (259) 21 36
    REAL_LITERAL (260) 37
    BOOL_LITERAL (261) 38
    ADDOP (262) 23 31
    MULOP (263) 24 33
    RELOP (264) 29
    ANDOP (265) 27
    OROP (266)
    NOTOP (267)
    ARROW (268) 20 21
    EXPOP (269)
    REMOP (270)
    BEGIN_ (271) 14
    BOOLEAN (272) 12
    END (273) 14
    ENDREDUCE (274) 18
    FUNCTION (275) 2
    INTEGER (276) 11
    IS (277) 10 20
    REDUCE (278) 18
    RETURNS (279) 2
    IF (280) 19
    ELSE (281) 19
    THEN (282) 19
    ENDIF (283) 19
    CASE (284) 20
    ENDCASE (285) 20
    OTHERS (286) 20
    REAL (287) 13
    WHEN (288) 21


Nonterminals, with rules where they appear

    $accept (39)
        on left: 0
    function (40)
        on left: 1
        on right: 0
    function_header (41)
        on left: 2
        on right: 1
    parameters (42)
        on left: 3 4
        on right: 2
    parameter (43)
        on left: 5
        on right: 3 6
    optional_parameter (44)
        on left: 6 7
        on right: 3 6
    optional_variable (45)
        on left: 8 9
        on right: 1 8
    variable (46)
        on left: 10
        on right: 8
    type (47)
        on left: 11 12 13
        on right: 2 5 10
    body (48)
        on left: 14
        on right: 1
    statement_ (49)
        on left: 15 16
        on right: 10 14 19 20 21 25
    statement (50)
        on left: 17 18 19 20
        on right: 15
    optional_case (51)
        on left: 21 22
        on right: 20 21
    operator (52)
        on left: 23 24
        on right: 18
    reductions (53)
        on left: 25 26
        on right: 18 25
    expression (54)
        on left: 27 28
        on right: 17 19 20 27 35
    relation (55)
        on left: 29 30
        on right: 27 28 29
    term (56)
        on left: 31 32
        on right: 29 30 31
    factor (57)
        on left: 33 34
        on right: 31 32 33
    primary (58)
        on left: 35 36 37 38 39
        on right: 33 34


State 0

    0 $accept: • function $end

    FUNCTION  shift, and go to state 1

    function         go to state 2
    function_header  go to state 3


State 1

    2 function_header: FUNCTION • IDENTIFIER parameters RETURNS type ';'

    IDENTIFIER  shift, and go to state 4


State 2

    0 $accept: function • $end

    $end  shift, and go to state 5


State 3

    1 function: function_header • optional_variable body

    $default  reduce using rule 9 (optional_variable)

    optional_variable  go to state 6


State 4

    2 function_header: FUNCTION IDENTIFIER • parameters RETURNS type ';'

    IDENTIFIER  shift, and go to state 7

    $default  reduce using rule 4 (parameters)

    parameters  go to state 8
    parameter   go to state 9


State 5

    0 $accept: function $end •

    $default  accept


State 6

    1 function: function_header optional_variable • body
    8 optional_variable: optional_variable • variable

    IDENTIFIER  shift, and go to state 10
    BEGIN_      shift, and go to state 11

    variable  go to state 12
    body      go to state 13


State 7

    5 parameter: IDENTIFIER • ':' type

    ':'  shift, and go to state 14


State 8

    2 function_header: FUNCTION IDENTIFIER parameters • RETURNS type ';'

    RETURNS  shift, and go to state 15


State 9

    3 parameters: parameter • optional_parameter

    $default  reduce using rule 7 (optional_parameter)

    optional_parameter  go to state 16


State 10

   10 variable: IDENTIFIER • ':' type IS statement_

    ':'  shift, and go to state 17


State 11

   14 body: BEGIN_ • statement_ END ';'

    error         shift, and go to state 18
    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    REDUCE        shift, and go to state 23
    IF            shift, and go to state 24
    CASE          shift, and go to state 25
    '('           shift, and go to state 26

    statement_  go to state 27
    statement   go to state 28
    expression  go to state 29
    relation    go to state 30
    term        go to state 31
    factor      go to state 32
    primary     go to state 33


State 12

    8 optional_variable: optional_variable variable •

    $default  reduce using rule 8 (optional_variable)


State 13

    1 function: function_header optional_variable body •

    $default  reduce using rule 1 (function)


State 14

    5 parameter: IDENTIFIER ':' • type

    BOOLEAN  shift, and go to state 34
    INTEGER  shift, and go to state 35
    REAL     shift, and go to state 36

    type  go to state 37


State 15

    2 function_header: FUNCTION IDENTIFIER parameters RETURNS • type ';'

    BOOLEAN  shift, and go to state 34
    INTEGER  shift, and go to state 35
    REAL     shift, and go to state 36

    type  go to state 38


State 16

    3 parameters: parameter optional_parameter •
    6 optional_parameter: optional_parameter • ',' parameter

    ','  shift, and go to state 39

    $default  reduce using rule 3 (parameters)


State 17

   10 variable: IDENTIFIER ':' • type IS statement_

    BOOLEAN  shift, and go to state 34
    INTEGER  shift, and go to state 35
    REAL     shift, and go to state 36

    type  go to state 40


State 18

   16 statement_: error • ';'

    ';'  shift, and go to state 41


State 19

   39 primary: IDENTIFIER •

    $default  reduce using rule 39 (primary)


State 20

   36 primary: INT_LITERAL •

    $default  reduce using rule 36 (primary)


State 21

   37 primary: REAL_LITERAL •

    $default  reduce using rule 37 (primary)


State 22

   38 primary: BOOL_LITERAL •

    $default  reduce using rule 38 (primary)


State 23

   18 statement: REDUCE • operator reductions ENDREDUCE

    ADDOP  shift, and go to state 42
    MULOP  shift, and go to state 43

    operator  go to state 44


State 24

   19 statement: IF • expression THEN statement_ ELSE statement_ ENDIF

    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    '('           shift, and go to state 26

    expression  go to state 45
    relation    go to state 30
    term        go to state 31
    factor      go to state 32
    primary     go to state 33


State 25

   20 statement: CASE • expression IS optional_case OTHERS ARROW statement_ ENDCASE

    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    '('           shift, and go to state 26

    expression  go to state 46
    relation    go to state 30
    term        go to state 31
    factor      go to state 32
    primary     go to state 33


State 26

   35 primary: '(' • expression ')'

    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    '('           shift, and go to state 26

    expression  go to state 47
    relation    go to state 30
    term        go to state 31
    factor      go to state 32
    primary     go to state 33


State 27

   14 body: BEGIN_ statement_ • END ';'

    END  shift, and go to state 48


State 28

   15 statement_: statement • ';'

    ';'  shift, and go to state 49


State 29

   17 statement: expression •
   27 expression: expression • ANDOP relation

    ANDOP  shift, and go to state 50

    $default  reduce using rule 17 (statement)


State 30

   28 expression: relation •
   29 relation: relation • RELOP term

    RELOP  shift, and go to state 51

    $default  reduce using rule 28 (expression)


State 31

   30 relation: term •
   31 term: term • ADDOP factor

    ADDOP  shift, and go to state 52

    $default  reduce using rule 30 (relation)


State 32

   32 term: factor •
   33 factor: factor • MULOP primary

    MULOP  shift, and go to state 53

    $default  reduce using rule 32 (term)


State 33

   34 factor: primary •

    $default  reduce using rule 34 (factor)


State 34

   12 type: BOOLEAN •

    $default  reduce using rule 12 (type)


State 35

   11 type: INTEGER •

    $default  reduce using rule 11 (type)


State 36

   13 type: REAL •

    $default  reduce using rule 13 (type)


State 37

    5 parameter: IDENTIFIER ':' type •

    $default  reduce using rule 5 (parameter)


State 38

    2 function_header: FUNCTION IDENTIFIER parameters RETURNS type • ';'

    ';'  shift, and go to state 54


State 39

    6 optional_parameter: optional_parameter ',' • parameter

    IDENTIFIER  shift, and go to state 7

    parameter  go to state 55


State 40

   10 variable: IDENTIFIER ':' type • IS statement_

    IS  shift, and go to state 56


State 41

   16 statement_: error ';' •

    $default  reduce using rule 16 (statement_)


State 42

   23 operator: ADDOP •

    $default  reduce using rule 23 (operator)


State 43

   24 operator: MULOP •

    $default  reduce using rule 24 (operator)


State 44

   18 statement: REDUCE operator • reductions ENDREDUCE

    $default  reduce using rule 26 (reductions)

    reductions  go to state 57


State 45

   19 statement: IF expression • THEN statement_ ELSE statement_ ENDIF
   27 expression: expression • ANDOP relation

    ANDOP  shift, and go to state 50
    THEN   shift, and go to state 58


State 46

   20 statement: CASE expression • IS optional_case OTHERS ARROW statement_ ENDCASE
   27 expression: expression • ANDOP relation

    ANDOP  shift, and go to state 50
    IS     shift, and go to state 59


State 47

   27 expression: expression • ANDOP relation
   35 primary: '(' expression • ')'

    ANDOP  shift, and go to state 50
    ')'    shift, and go to state 60


State 48

   14 body: BEGIN_ statement_ END • ';'

    ';'  shift, and go to state 61


State 49

   15 statement_: statement ';' •

    $default  reduce using rule 15 (statement_)


State 50

   27 expression: expression ANDOP • relation

    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    '('           shift, and go to state 26

    relation  go to state 62
    term      go to state 31
    factor    go to state 32
    primary   go to state 33


State 51

   29 relation: relation RELOP • term

    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    '('           shift, and go to state 26

    term     go to state 63
    factor   go to state 32
    primary  go to state 33


State 52

   31 term: term ADDOP • factor

    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    '('           shift, and go to state 26

    factor   go to state 64
    primary  go to state 33


State 53

   33 factor: factor MULOP • primary

    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    '('           shift, and go to state 26

    primary  go to state 65


State 54

    2 function_header: FUNCTION IDENTIFIER parameters RETURNS type ';' •

    $default  reduce using rule 2 (function_header)


State 55

    6 optional_parameter: optional_parameter ',' parameter •

    $default  reduce using rule 6 (optional_parameter)


State 56

   10 variable: IDENTIFIER ':' type IS • statement_

    error         shift, and go to state 18
    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    REDUCE        shift, and go to state 23
    IF            shift, and go to state 24
    CASE          shift, and go to state 25
    '('           shift, and go to state 26

    statement_  go to state 66
    statement   go to state 28
    expression  go to state 29
    relation    go to state 30
    term        go to state 31
    factor      go to state 32
    primary     go to state 33


State 57

   18 statement: REDUCE operator reductions • ENDREDUCE
   25 reductions: reductions • statement_

    error         shift, and go to state 18
    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    ENDREDUCE     shift, and go to state 67
    REDUCE        shift, and go to state 23
    IF            shift, and go to state 24
    CASE          shift, and go to state 25
    '('           shift, and go to state 26

    statement_  go to state 68
    statement   go to state 28
    expression  go to state 29
    relation    go to state 30
    term        go to state 31
    factor      go to state 32
    primary     go to state 33


State 58

   19 statement: IF expression THEN • statement_ ELSE statement_ ENDIF

    error         shift, and go to state 18
    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    REDUCE        shift, and go to state 23
    IF            shift, and go to state 24
    CASE          shift, and go to state 25
    '('           shift, and go to state 26

    statement_  go to state 69
    statement   go to state 28
    expression  go to state 29
    relation    go to state 30
    term        go to state 31
    factor      go to state 32
    primary     go to state 33


State 59

   20 statement: CASE expression IS • optional_case OTHERS ARROW statement_ ENDCASE

    $default  reduce using rule 22 (optional_case)

    optional_case  go to state 70


State 60

   35 primary: '(' expression ')' •

    $default  reduce using rule 35 (primary)


State 61

   14 body: BEGIN_ statement_ END ';' •

    $default  reduce using rule 14 (body)


State 62

   27 expression: expression ANDOP relation •
   29 relation: relation • RELOP term

    RELOP  shift, and go to state 51

    $default  reduce using rule 27 (expression)


State 63

   29 relation: relation RELOP term •
   31 term: term • ADDOP factor

    ADDOP  shift, and go to state 52

    $default  reduce using rule 29 (relation)


State 64

   31 term: term ADDOP factor •
   33 factor: factor • MULOP primary

    MULOP  shift, and go to state 53

    $default  reduce using rule 31 (term)


State 65

   33 factor: factor MULOP primary •

    $default  reduce using rule 33 (factor)


State 66

   10 variable: IDENTIFIER ':' type IS statement_ •

    $default  reduce using rule 10 (variable)


State 67

   18 statement: REDUCE operator reductions ENDREDUCE •

    $default  reduce using rule 18 (statement)


State 68

   25 reductions: reductions statement_ •

    $default  reduce using rule 25 (reductions)


State 69

   19 statement: IF expression THEN statement_ • ELSE statement_ ENDIF

    ELSE  shift, and go to state 71


State 70

   20 statement: CASE expression IS optional_case • OTHERS ARROW statement_ ENDCASE
   21 optional_case: optional_case • WHEN INT_LITERAL ARROW statement_

    OTHERS  shift, and go to state 72
    WHEN    shift, and go to state 73


State 71

   19 statement: IF expression THEN statement_ ELSE • statement_ ENDIF

    error         shift, and go to state 18
    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    REDUCE        shift, and go to state 23
    IF            shift, and go to state 24
    CASE          shift, and go to state 25
    '('           shift, and go to state 26

    statement_  go to state 74
    statement   go to state 28
    expression  go to state 29
    relation    go to state 30
    term        go to state 31
    factor      go to state 32
    primary     go to state 33


State 72

   20 statement: CASE expression IS optional_case OTHERS • ARROW statement_ ENDCASE

    ARROW  shift, and go to state 75


State 73

   21 optional_case: optional_case WHEN • INT_LITERAL ARROW statement_

    INT_LITERAL  shift, and go to state 76


State 74

   19 statement: IF expression THEN statement_ ELSE statement_ • ENDIF

    ENDIF  shift, and go to state 77


State 75

   20 statement: CASE expression IS optional_case OTHERS ARROW • statement_ ENDCASE

    error         shift, and go to state 18
    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    REDUCE        shift, and go to state 23
    IF            shift, and go to state 24
    CASE          shift, and go to state 25
    '('           shift, and go to state 26

    statement_  go to state 78
    statement   go to state 28
    expression  go to state 29
    relation    go to state 30
    term        go to state 31
    factor      go to state 32
    primary     go to state 33


State 76

   21 optional_case: optional_case WHEN INT_LITERAL • ARROW statement_

    ARROW  shift, and go to state 79


State 77

   19 statement: IF expression THEN statement_ ELSE statement_ ENDIF •

    $default  reduce using rule 19 (statement)


State 78

   20 statement: CASE expression IS optional_case OTHERS ARROW statement_ • ENDCASE

    ENDCASE  shift, and go to state 80


State 79

   21 optional_case: optional_case WHEN INT_LITERAL ARROW • statement_

    error         shift, and go to state 18
    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    REDUCE        shift, and go to state 23
    IF            shift, and go to state 24
    CASE          shift, and go to state 25
    '('           shift, and go to state 26

    statement_  go to state 81
    statement   go to state 28
    expression  go to state 29
    relation    go to state 30
    term        go to state 31
    factor      go to state 32
    primary     go to state 33


State 80

   20 statement: CASE expression IS optional_case OTHERS ARROW statement_ ENDCASE •

    $default  reduce using rule 20 (statement)


State 81

   21 optional_case: optional_case WHEN INT_LITERAL ARROW statement_ •

    $default  reduce using rule 21 (optional_case)
