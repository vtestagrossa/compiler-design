Terminals unused in grammar

    OROP
    NOTOP
    EXPOP
    REMOP


Grammar

    0 $accept: function $end

    1 function: function_header optional_variable body

    2 function_header: FUNCTION IDENTIFIER parameters RETURNS type ';'

    3 parameters: parameter optional_parameter

    4 parameter: IDENTIFIER ':' type

    5 optional_parameter: optional_parameter ',' parameter
    6                   | ε

    7 optional_variable: optional_variable variable
    8                  | ε

    9 variable: IDENTIFIER ':' type IS statement_

   10 type: INTEGER
   11     | BOOLEAN
   12     | REAL

   13 body: BEGIN_ statement_ END ';'

   14 statement_: statement ';'
   15           | error ';'

   16 statement: expression
   17          | REDUCE operator reductions ENDREDUCE
   18          | IF expression THEN statement_ ELSE statement_ ENDIF
   19          | CASE expression IS optional_case OTHERS ARROW statement_ ENDCASE

   20 optional_case: optional_case WHEN INT_LITERAL ARROW statement_
   21              | ε

   22 operator: ADDOP
   23         | MULOP

   24 reductions: reductions statement_
   25           | ε

   26 expression: expression ANDOP relation
   27           | relation

   28 relation: relation RELOP term
   29         | term

   30 term: term ADDOP factor
   31     | factor

   32 factor: factor MULOP primary
   33       | primary

   34 primary: '(' expression ')'
   35        | INT_LITERAL
   36        | REAL_LITERAL
   37        | BOOL_LITERAL
   38        | IDENTIFIER


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 34
    ')' (41) 34
    ',' (44) 5
    ':' (58) 4 9
    ';' (59) 2 13 14 15
    error (256) 15
    IDENTIFIER (258) 2 4 9 38
    INT_LITERAL (259) 20 35
    REAL_LITERAL (260) 36
    BOOL_LITERAL (261) 37
    ADDOP (262) 22 30
    MULOP (263) 23 32
    RELOP (264) 28
    ANDOP (265) 26
    OROP (266)
    NOTOP (267)
    ARROW (268) 19 20
    EXPOP (269)
    REMOP (270)
    BEGIN_ (271) 13
    BOOLEAN (272) 11
    END (273) 13
    ENDREDUCE (274) 17
    FUNCTION (275) 2
    INTEGER (276) 10
    IS (277) 9 19
    REDUCE (278) 17
    RETURNS (279) 2
    IF (280) 18
    ELSE (281) 18
    THEN (282) 18
    ENDIF (283) 18
    CASE (284) 19
    ENDCASE (285) 19
    OTHERS (286) 19
    REAL (287) 12
    WHEN (288) 20


Nonterminals, with rules where they appear

    $accept (39)
        on left: 0
    function (40)
        on left: 1
        on right: 0
    function_header (41)
        on left: 2
        on right: 1
    parameters (42)
        on left: 3
        on right: 2
    parameter (43)
        on left: 4
        on right: 3 5
    optional_parameter (44)
        on left: 5 6
        on right: 3 5
    optional_variable (45)
        on left: 7 8
        on right: 1 7
    variable (46)
        on left: 9
        on right: 7
    type (47)
        on left: 10 11 12
        on right: 2 4 9
    body (48)
        on left: 13
        on right: 1
    statement_ (49)
        on left: 14 15
        on right: 9 13 18 19 20 24
    statement (50)
        on left: 16 17 18 19
        on right: 14
    optional_case (51)
        on left: 20 21
        on right: 19 20
    operator (52)
        on left: 22 23
        on right: 17
    reductions (53)
        on left: 24 25
        on right: 17 24
    expression (54)
        on left: 26 27
        on right: 16 18 19 26 34
    relation (55)
        on left: 28 29
        on right: 26 27 28
    term (56)
        on left: 30 31
        on right: 28 29 30
    factor (57)
        on left: 32 33
        on right: 30 31 32
    primary (58)
        on left: 34 35 36 37 38
        on right: 32 33


State 0

    0 $accept: • function $end

    FUNCTION  shift, and go to state 1

    function         go to state 2
    function_header  go to state 3


State 1

    2 function_header: FUNCTION • IDENTIFIER parameters RETURNS type ';'

    IDENTIFIER  shift, and go to state 4


State 2

    0 $accept: function • $end

    $end  shift, and go to state 5


State 3

    1 function: function_header • optional_variable body

    $default  reduce using rule 8 (optional_variable)

    optional_variable  go to state 6


State 4

    2 function_header: FUNCTION IDENTIFIER • parameters RETURNS type ';'

    IDENTIFIER  shift, and go to state 7

    parameters  go to state 8
    parameter   go to state 9


State 5

    0 $accept: function $end •

    $default  accept


State 6

    1 function: function_header optional_variable • body
    7 optional_variable: optional_variable • variable

    IDENTIFIER  shift, and go to state 10
    BEGIN_      shift, and go to state 11

    variable  go to state 12
    body      go to state 13


State 7

    4 parameter: IDENTIFIER • ':' type

    ':'  shift, and go to state 14


State 8

    2 function_header: FUNCTION IDENTIFIER parameters • RETURNS type ';'

    RETURNS  shift, and go to state 15


State 9

    3 parameters: parameter • optional_parameter

    $default  reduce using rule 6 (optional_parameter)

    optional_parameter  go to state 16


State 10

    9 variable: IDENTIFIER • ':' type IS statement_

    ':'  shift, and go to state 17


State 11

   13 body: BEGIN_ • statement_ END ';'

    error         shift, and go to state 18
    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    REDUCE        shift, and go to state 23
    IF            shift, and go to state 24
    CASE          shift, and go to state 25
    '('           shift, and go to state 26

    statement_  go to state 27
    statement   go to state 28
    expression  go to state 29
    relation    go to state 30
    term        go to state 31
    factor      go to state 32
    primary     go to state 33


State 12

    7 optional_variable: optional_variable variable •

    $default  reduce using rule 7 (optional_variable)


State 13

    1 function: function_header optional_variable body •

    $default  reduce using rule 1 (function)


State 14

    4 parameter: IDENTIFIER ':' • type

    BOOLEAN  shift, and go to state 34
    INTEGER  shift, and go to state 35
    REAL     shift, and go to state 36

    type  go to state 37


State 15

    2 function_header: FUNCTION IDENTIFIER parameters RETURNS • type ';'

    BOOLEAN  shift, and go to state 34
    INTEGER  shift, and go to state 35
    REAL     shift, and go to state 36

    type  go to state 38


State 16

    3 parameters: parameter optional_parameter •
    5 optional_parameter: optional_parameter • ',' parameter

    ','  shift, and go to state 39

    $default  reduce using rule 3 (parameters)


State 17

    9 variable: IDENTIFIER ':' • type IS statement_

    BOOLEAN  shift, and go to state 34
    INTEGER  shift, and go to state 35
    REAL     shift, and go to state 36

    type  go to state 40


State 18

   15 statement_: error • ';'

    ';'  shift, and go to state 41


State 19

   38 primary: IDENTIFIER •

    $default  reduce using rule 38 (primary)


State 20

   35 primary: INT_LITERAL •

    $default  reduce using rule 35 (primary)


State 21

   36 primary: REAL_LITERAL •

    $default  reduce using rule 36 (primary)


State 22

   37 primary: BOOL_LITERAL •

    $default  reduce using rule 37 (primary)


State 23

   17 statement: REDUCE • operator reductions ENDREDUCE

    ADDOP  shift, and go to state 42
    MULOP  shift, and go to state 43

    operator  go to state 44


State 24

   18 statement: IF • expression THEN statement_ ELSE statement_ ENDIF

    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    '('           shift, and go to state 26

    expression  go to state 45
    relation    go to state 30
    term        go to state 31
    factor      go to state 32
    primary     go to state 33


State 25

   19 statement: CASE • expression IS optional_case OTHERS ARROW statement_ ENDCASE

    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    '('           shift, and go to state 26

    expression  go to state 46
    relation    go to state 30
    term        go to state 31
    factor      go to state 32
    primary     go to state 33


State 26

   34 primary: '(' • expression ')'

    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    '('           shift, and go to state 26

    expression  go to state 47
    relation    go to state 30
    term        go to state 31
    factor      go to state 32
    primary     go to state 33


State 27

   13 body: BEGIN_ statement_ • END ';'

    END  shift, and go to state 48


State 28

   14 statement_: statement • ';'

    ';'  shift, and go to state 49


State 29

   16 statement: expression •
   26 expression: expression • ANDOP relation

    ANDOP  shift, and go to state 50

    $default  reduce using rule 16 (statement)


State 30

   27 expression: relation •
   28 relation: relation • RELOP term

    RELOP  shift, and go to state 51

    $default  reduce using rule 27 (expression)


State 31

   29 relation: term •
   30 term: term • ADDOP factor

    ADDOP  shift, and go to state 52

    $default  reduce using rule 29 (relation)


State 32

   31 term: factor •
   32 factor: factor • MULOP primary

    MULOP  shift, and go to state 53

    $default  reduce using rule 31 (term)


State 33

   33 factor: primary •

    $default  reduce using rule 33 (factor)


State 34

   11 type: BOOLEAN •

    $default  reduce using rule 11 (type)


State 35

   10 type: INTEGER •

    $default  reduce using rule 10 (type)


State 36

   12 type: REAL •

    $default  reduce using rule 12 (type)


State 37

    4 parameter: IDENTIFIER ':' type •

    $default  reduce using rule 4 (parameter)


State 38

    2 function_header: FUNCTION IDENTIFIER parameters RETURNS type • ';'

    ';'  shift, and go to state 54


State 39

    5 optional_parameter: optional_parameter ',' • parameter

    IDENTIFIER  shift, and go to state 7

    parameter  go to state 55


State 40

    9 variable: IDENTIFIER ':' type • IS statement_

    IS  shift, and go to state 56


State 41

   15 statement_: error ';' •

    $default  reduce using rule 15 (statement_)


State 42

   22 operator: ADDOP •

    $default  reduce using rule 22 (operator)


State 43

   23 operator: MULOP •

    $default  reduce using rule 23 (operator)


State 44

   17 statement: REDUCE operator • reductions ENDREDUCE

    $default  reduce using rule 25 (reductions)

    reductions  go to state 57


State 45

   18 statement: IF expression • THEN statement_ ELSE statement_ ENDIF
   26 expression: expression • ANDOP relation

    ANDOP  shift, and go to state 50
    THEN   shift, and go to state 58


State 46

   19 statement: CASE expression • IS optional_case OTHERS ARROW statement_ ENDCASE
   26 expression: expression • ANDOP relation

    ANDOP  shift, and go to state 50
    IS     shift, and go to state 59


State 47

   26 expression: expression • ANDOP relation
   34 primary: '(' expression • ')'

    ANDOP  shift, and go to state 50
    ')'    shift, and go to state 60


State 48

   13 body: BEGIN_ statement_ END • ';'

    ';'  shift, and go to state 61


State 49

   14 statement_: statement ';' •

    $default  reduce using rule 14 (statement_)


State 50

   26 expression: expression ANDOP • relation

    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    '('           shift, and go to state 26

    relation  go to state 62
    term      go to state 31
    factor    go to state 32
    primary   go to state 33


State 51

   28 relation: relation RELOP • term

    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    '('           shift, and go to state 26

    term     go to state 63
    factor   go to state 32
    primary  go to state 33


State 52

   30 term: term ADDOP • factor

    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    '('           shift, and go to state 26

    factor   go to state 64
    primary  go to state 33


State 53

   32 factor: factor MULOP • primary

    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    '('           shift, and go to state 26

    primary  go to state 65


State 54

    2 function_header: FUNCTION IDENTIFIER parameters RETURNS type ';' •

    $default  reduce using rule 2 (function_header)


State 55

    5 optional_parameter: optional_parameter ',' parameter •

    $default  reduce using rule 5 (optional_parameter)


State 56

    9 variable: IDENTIFIER ':' type IS • statement_

    error         shift, and go to state 18
    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    REDUCE        shift, and go to state 23
    IF            shift, and go to state 24
    CASE          shift, and go to state 25
    '('           shift, and go to state 26

    statement_  go to state 66
    statement   go to state 28
    expression  go to state 29
    relation    go to state 30
    term        go to state 31
    factor      go to state 32
    primary     go to state 33


State 57

   17 statement: REDUCE operator reductions • ENDREDUCE
   24 reductions: reductions • statement_

    error         shift, and go to state 18
    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    ENDREDUCE     shift, and go to state 67
    REDUCE        shift, and go to state 23
    IF            shift, and go to state 24
    CASE          shift, and go to state 25
    '('           shift, and go to state 26

    statement_  go to state 68
    statement   go to state 28
    expression  go to state 29
    relation    go to state 30
    term        go to state 31
    factor      go to state 32
    primary     go to state 33


State 58

   18 statement: IF expression THEN • statement_ ELSE statement_ ENDIF

    error         shift, and go to state 18
    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    REDUCE        shift, and go to state 23
    IF            shift, and go to state 24
    CASE          shift, and go to state 25
    '('           shift, and go to state 26

    statement_  go to state 69
    statement   go to state 28
    expression  go to state 29
    relation    go to state 30
    term        go to state 31
    factor      go to state 32
    primary     go to state 33


State 59

   19 statement: CASE expression IS • optional_case OTHERS ARROW statement_ ENDCASE

    $default  reduce using rule 21 (optional_case)

    optional_case  go to state 70


State 60

   34 primary: '(' expression ')' •

    $default  reduce using rule 34 (primary)


State 61

   13 body: BEGIN_ statement_ END ';' •

    $default  reduce using rule 13 (body)


State 62

   26 expression: expression ANDOP relation •
   28 relation: relation • RELOP term

    RELOP  shift, and go to state 51

    $default  reduce using rule 26 (expression)


State 63

   28 relation: relation RELOP term •
   30 term: term • ADDOP factor

    ADDOP  shift, and go to state 52

    $default  reduce using rule 28 (relation)


State 64

   30 term: term ADDOP factor •
   32 factor: factor • MULOP primary

    MULOP  shift, and go to state 53

    $default  reduce using rule 30 (term)


State 65

   32 factor: factor MULOP primary •

    $default  reduce using rule 32 (factor)


State 66

    9 variable: IDENTIFIER ':' type IS statement_ •

    $default  reduce using rule 9 (variable)


State 67

   17 statement: REDUCE operator reductions ENDREDUCE •

    $default  reduce using rule 17 (statement)


State 68

   24 reductions: reductions statement_ •

    $default  reduce using rule 24 (reductions)


State 69

   18 statement: IF expression THEN statement_ • ELSE statement_ ENDIF

    ELSE  shift, and go to state 71


State 70

   19 statement: CASE expression IS optional_case • OTHERS ARROW statement_ ENDCASE
   20 optional_case: optional_case • WHEN INT_LITERAL ARROW statement_

    OTHERS  shift, and go to state 72
    WHEN    shift, and go to state 73


State 71

   18 statement: IF expression THEN statement_ ELSE • statement_ ENDIF

    error         shift, and go to state 18
    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    REDUCE        shift, and go to state 23
    IF            shift, and go to state 24
    CASE          shift, and go to state 25
    '('           shift, and go to state 26

    statement_  go to state 74
    statement   go to state 28
    expression  go to state 29
    relation    go to state 30
    term        go to state 31
    factor      go to state 32
    primary     go to state 33


State 72

   19 statement: CASE expression IS optional_case OTHERS • ARROW statement_ ENDCASE

    ARROW  shift, and go to state 75


State 73

   20 optional_case: optional_case WHEN • INT_LITERAL ARROW statement_

    INT_LITERAL  shift, and go to state 76


State 74

   18 statement: IF expression THEN statement_ ELSE statement_ • ENDIF

    ENDIF  shift, and go to state 77


State 75

   19 statement: CASE expression IS optional_case OTHERS ARROW • statement_ ENDCASE

    error         shift, and go to state 18
    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    REDUCE        shift, and go to state 23
    IF            shift, and go to state 24
    CASE          shift, and go to state 25
    '('           shift, and go to state 26

    statement_  go to state 78
    statement   go to state 28
    expression  go to state 29
    relation    go to state 30
    term        go to state 31
    factor      go to state 32
    primary     go to state 33


State 76

   20 optional_case: optional_case WHEN INT_LITERAL • ARROW statement_

    ARROW  shift, and go to state 79


State 77

   18 statement: IF expression THEN statement_ ELSE statement_ ENDIF •

    $default  reduce using rule 18 (statement)


State 78

   19 statement: CASE expression IS optional_case OTHERS ARROW statement_ • ENDCASE

    ENDCASE  shift, and go to state 80


State 79

   20 optional_case: optional_case WHEN INT_LITERAL ARROW • statement_

    error         shift, and go to state 18
    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    REDUCE        shift, and go to state 23
    IF            shift, and go to state 24
    CASE          shift, and go to state 25
    '('           shift, and go to state 26

    statement_  go to state 81
    statement   go to state 28
    expression  go to state 29
    relation    go to state 30
    term        go to state 31
    factor      go to state 32
    primary     go to state 33


State 80

   19 statement: CASE expression IS optional_case OTHERS ARROW statement_ ENDCASE •

    $default  reduce using rule 19 (statement)


State 81

   20 optional_case: optional_case WHEN INT_LITERAL ARROW statement_ •

    $default  reduce using rule 20 (optional_case)
