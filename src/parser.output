Grammar

    0 $accept: function $end

    1 function: function_header optional_variable body

    2 function_header: FUNCTION IDENTIFIER parameters RETURNS type ';'

    3 parameters: parameter optional_parameter
    4           | ε

    5 parameter: IDENTIFIER ':' type

    6 optional_parameter: optional_parameter ',' parameter
    7                   | ε

    8 optional_variable: optional_variable variable
    9                  | ε

   10 variable: IDENTIFIER ':' type IS statement_

   11 type: INTEGER
   12     | BOOLEAN
   13     | REAL

   14 body: BEGIN_ statement_ END ';'

   15 statement_: statement ';'
   16           | error ';'

   17 statement: expression
   18          | REDUCE operator reductions ENDREDUCE
   19          | IF expression THEN statement_ ELSE statement_ ENDIF
   20          | CASE expression IS optional_case OTHERS ARROW statement_ ENDCASE

   21 optional_case: optional_case WHEN INT_LITERAL ARROW statement_
   22              | ε

   23 operator: ADDOP
   24         | MULOP
   25         | REMOP
   26         | EXPOP
   27         | OROP
   28         | ANDOP

   29 reductions: reductions statement_
   30           | ε

   31 expression: or_expression

   32 or_expression: or_expression OROP and_expression
   33              | and_expression

   34 and_expression: and_expression ANDOP not_expression
   35               | not_expression

   36 not_expression: NOTOP not_expression
   37               | relation

   38 relation: relation RELOP term
   39         | term

   40 term: term ADDOP factor
   41     | factor

   42 factor: factor MULOP exponent
   43       | factor REMOP exponent
   44       | exponent

   45 exponent: exponent EXPOP primary
   46         | primary

   47 primary: '(' expression ')'
   48        | INT_LITERAL
   49        | REAL_LITERAL
   50        | BOOL_LITERAL
   51        | IDENTIFIER


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 47
    ')' (41) 47
    ',' (44) 6
    ':' (58) 5 10
    ';' (59) 2 14 15 16
    error (256) 16
    IDENTIFIER (258) 2 5 10 51
    INT_LITERAL (259) 21 48
    REAL_LITERAL (260) 49
    BOOL_LITERAL (261) 50
    ADDOP (262) 23 40
    MULOP (263) 24 42
    RELOP (264) 38
    ANDOP (265) 28 34
    OROP (266) 27 32
    NOTOP (267) 36
    ARROW (268) 20 21
    EXPOP (269) 26 45
    REMOP (270) 25 43
    BEGIN_ (271) 14
    BOOLEAN (272) 12
    END (273) 14
    ENDREDUCE (274) 18
    FUNCTION (275) 2
    INTEGER (276) 11
    IS (277) 10 20
    REDUCE (278) 18
    RETURNS (279) 2
    IF (280) 19
    ELSE (281) 19
    THEN (282) 19
    ENDIF (283) 19
    CASE (284) 20
    ENDCASE (285) 20
    OTHERS (286) 20
    REAL (287) 13
    WHEN (288) 21


Nonterminals, with rules where they appear

    $accept (39)
        on left: 0
    function (40)
        on left: 1
        on right: 0
    function_header (41)
        on left: 2
        on right: 1
    parameters (42)
        on left: 3 4
        on right: 2
    parameter (43)
        on left: 5
        on right: 3 6
    optional_parameter (44)
        on left: 6 7
        on right: 3 6
    optional_variable (45)
        on left: 8 9
        on right: 1 8
    variable (46)
        on left: 10
        on right: 8
    type (47)
        on left: 11 12 13
        on right: 2 5 10
    body (48)
        on left: 14
        on right: 1
    statement_ (49)
        on left: 15 16
        on right: 10 14 19 20 21 29
    statement (50)
        on left: 17 18 19 20
        on right: 15
    optional_case (51)
        on left: 21 22
        on right: 20 21
    operator (52)
        on left: 23 24 25 26 27 28
        on right: 18
    reductions (53)
        on left: 29 30
        on right: 18 29
    expression (54)
        on left: 31
        on right: 17 19 20 47
    or_expression (55)
        on left: 32 33
        on right: 31 32
    and_expression (56)
        on left: 34 35
        on right: 32 33 34
    not_expression (57)
        on left: 36 37
        on right: 34 35 36
    relation (58)
        on left: 38 39
        on right: 37 38
    term (59)
        on left: 40 41
        on right: 38 39 40
    factor (60)
        on left: 42 43 44
        on right: 40 41 42 43
    exponent (61)
        on left: 45 46
        on right: 42 43 44 45
    primary (62)
        on left: 47 48 49 50 51
        on right: 45 46


State 0

    0 $accept: • function $end

    FUNCTION  shift, and go to state 1

    function         go to state 2
    function_header  go to state 3


State 1

    2 function_header: FUNCTION • IDENTIFIER parameters RETURNS type ';'

    IDENTIFIER  shift, and go to state 4


State 2

    0 $accept: function • $end

    $end  shift, and go to state 5


State 3

    1 function: function_header • optional_variable body

    $default  reduce using rule 9 (optional_variable)

    optional_variable  go to state 6


State 4

    2 function_header: FUNCTION IDENTIFIER • parameters RETURNS type ';'

    IDENTIFIER  shift, and go to state 7

    $default  reduce using rule 4 (parameters)

    parameters  go to state 8
    parameter   go to state 9


State 5

    0 $accept: function $end •

    $default  accept


State 6

    1 function: function_header optional_variable • body
    8 optional_variable: optional_variable • variable

    IDENTIFIER  shift, and go to state 10
    BEGIN_      shift, and go to state 11

    variable  go to state 12
    body      go to state 13


State 7

    5 parameter: IDENTIFIER • ':' type

    ':'  shift, and go to state 14


State 8

    2 function_header: FUNCTION IDENTIFIER parameters • RETURNS type ';'

    RETURNS  shift, and go to state 15


State 9

    3 parameters: parameter • optional_parameter

    $default  reduce using rule 7 (optional_parameter)

    optional_parameter  go to state 16


State 10

   10 variable: IDENTIFIER • ':' type IS statement_

    ':'  shift, and go to state 17


State 11

   14 body: BEGIN_ • statement_ END ';'

    error         shift, and go to state 18
    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    NOTOP         shift, and go to state 23
    REDUCE        shift, and go to state 24
    IF            shift, and go to state 25
    CASE          shift, and go to state 26
    '('           shift, and go to state 27

    statement_      go to state 28
    statement       go to state 29
    expression      go to state 30
    or_expression   go to state 31
    and_expression  go to state 32
    not_expression  go to state 33
    relation        go to state 34
    term            go to state 35
    factor          go to state 36
    exponent        go to state 37
    primary         go to state 38


State 12

    8 optional_variable: optional_variable variable •

    $default  reduce using rule 8 (optional_variable)


State 13

    1 function: function_header optional_variable body •

    $default  reduce using rule 1 (function)


State 14

    5 parameter: IDENTIFIER ':' • type

    BOOLEAN  shift, and go to state 39
    INTEGER  shift, and go to state 40
    REAL     shift, and go to state 41

    type  go to state 42


State 15

    2 function_header: FUNCTION IDENTIFIER parameters RETURNS • type ';'

    BOOLEAN  shift, and go to state 39
    INTEGER  shift, and go to state 40
    REAL     shift, and go to state 41

    type  go to state 43


State 16

    3 parameters: parameter optional_parameter •
    6 optional_parameter: optional_parameter • ',' parameter

    ','  shift, and go to state 44

    $default  reduce using rule 3 (parameters)


State 17

   10 variable: IDENTIFIER ':' • type IS statement_

    BOOLEAN  shift, and go to state 39
    INTEGER  shift, and go to state 40
    REAL     shift, and go to state 41

    type  go to state 45


State 18

   16 statement_: error • ';'

    ';'  shift, and go to state 46


State 19

   51 primary: IDENTIFIER •

    $default  reduce using rule 51 (primary)


State 20

   48 primary: INT_LITERAL •

    $default  reduce using rule 48 (primary)


State 21

   49 primary: REAL_LITERAL •

    $default  reduce using rule 49 (primary)


State 22

   50 primary: BOOL_LITERAL •

    $default  reduce using rule 50 (primary)


State 23

   36 not_expression: NOTOP • not_expression

    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    NOTOP         shift, and go to state 23
    '('           shift, and go to state 27

    not_expression  go to state 47
    relation        go to state 34
    term            go to state 35
    factor          go to state 36
    exponent        go to state 37
    primary         go to state 38


State 24

   18 statement: REDUCE • operator reductions ENDREDUCE

    ADDOP  shift, and go to state 48
    MULOP  shift, and go to state 49
    ANDOP  shift, and go to state 50
    OROP   shift, and go to state 51
    EXPOP  shift, and go to state 52
    REMOP  shift, and go to state 53

    operator  go to state 54


State 25

   19 statement: IF • expression THEN statement_ ELSE statement_ ENDIF

    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    NOTOP         shift, and go to state 23
    '('           shift, and go to state 27

    expression      go to state 55
    or_expression   go to state 31
    and_expression  go to state 32
    not_expression  go to state 33
    relation        go to state 34
    term            go to state 35
    factor          go to state 36
    exponent        go to state 37
    primary         go to state 38


State 26

   20 statement: CASE • expression IS optional_case OTHERS ARROW statement_ ENDCASE

    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    NOTOP         shift, and go to state 23
    '('           shift, and go to state 27

    expression      go to state 56
    or_expression   go to state 31
    and_expression  go to state 32
    not_expression  go to state 33
    relation        go to state 34
    term            go to state 35
    factor          go to state 36
    exponent        go to state 37
    primary         go to state 38


State 27

   47 primary: '(' • expression ')'

    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    NOTOP         shift, and go to state 23
    '('           shift, and go to state 27

    expression      go to state 57
    or_expression   go to state 31
    and_expression  go to state 32
    not_expression  go to state 33
    relation        go to state 34
    term            go to state 35
    factor          go to state 36
    exponent        go to state 37
    primary         go to state 38


State 28

   14 body: BEGIN_ statement_ • END ';'

    END  shift, and go to state 58


State 29

   15 statement_: statement • ';'

    ';'  shift, and go to state 59


State 30

   17 statement: expression •

    $default  reduce using rule 17 (statement)


State 31

   31 expression: or_expression •
   32 or_expression: or_expression • OROP and_expression

    OROP  shift, and go to state 60

    $default  reduce using rule 31 (expression)


State 32

   33 or_expression: and_expression •
   34 and_expression: and_expression • ANDOP not_expression

    ANDOP  shift, and go to state 61

    $default  reduce using rule 33 (or_expression)


State 33

   35 and_expression: not_expression •

    $default  reduce using rule 35 (and_expression)


State 34

   37 not_expression: relation •
   38 relation: relation • RELOP term

    RELOP  shift, and go to state 62

    $default  reduce using rule 37 (not_expression)


State 35

   39 relation: term •
   40 term: term • ADDOP factor

    ADDOP  shift, and go to state 63

    $default  reduce using rule 39 (relation)


State 36

   41 term: factor •
   42 factor: factor • MULOP exponent
   43       | factor • REMOP exponent

    MULOP  shift, and go to state 64
    REMOP  shift, and go to state 65

    $default  reduce using rule 41 (term)


State 37

   44 factor: exponent •
   45 exponent: exponent • EXPOP primary

    EXPOP  shift, and go to state 66

    $default  reduce using rule 44 (factor)


State 38

   46 exponent: primary •

    $default  reduce using rule 46 (exponent)


State 39

   12 type: BOOLEAN •

    $default  reduce using rule 12 (type)


State 40

   11 type: INTEGER •

    $default  reduce using rule 11 (type)


State 41

   13 type: REAL •

    $default  reduce using rule 13 (type)


State 42

    5 parameter: IDENTIFIER ':' type •

    $default  reduce using rule 5 (parameter)


State 43

    2 function_header: FUNCTION IDENTIFIER parameters RETURNS type • ';'

    ';'  shift, and go to state 67


State 44

    6 optional_parameter: optional_parameter ',' • parameter

    IDENTIFIER  shift, and go to state 7

    parameter  go to state 68


State 45

   10 variable: IDENTIFIER ':' type • IS statement_

    IS  shift, and go to state 69


State 46

   16 statement_: error ';' •

    $default  reduce using rule 16 (statement_)


State 47

   36 not_expression: NOTOP not_expression •

    $default  reduce using rule 36 (not_expression)


State 48

   23 operator: ADDOP •

    $default  reduce using rule 23 (operator)


State 49

   24 operator: MULOP •

    $default  reduce using rule 24 (operator)


State 50

   28 operator: ANDOP •

    $default  reduce using rule 28 (operator)


State 51

   27 operator: OROP •

    $default  reduce using rule 27 (operator)


State 52

   26 operator: EXPOP •

    $default  reduce using rule 26 (operator)


State 53

   25 operator: REMOP •

    $default  reduce using rule 25 (operator)


State 54

   18 statement: REDUCE operator • reductions ENDREDUCE

    $default  reduce using rule 30 (reductions)

    reductions  go to state 70


State 55

   19 statement: IF expression • THEN statement_ ELSE statement_ ENDIF

    THEN  shift, and go to state 71


State 56

   20 statement: CASE expression • IS optional_case OTHERS ARROW statement_ ENDCASE

    IS  shift, and go to state 72


State 57

   47 primary: '(' expression • ')'

    ')'  shift, and go to state 73


State 58

   14 body: BEGIN_ statement_ END • ';'

    ';'  shift, and go to state 74


State 59

   15 statement_: statement ';' •

    $default  reduce using rule 15 (statement_)


State 60

   32 or_expression: or_expression OROP • and_expression

    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    NOTOP         shift, and go to state 23
    '('           shift, and go to state 27

    and_expression  go to state 75
    not_expression  go to state 33
    relation        go to state 34
    term            go to state 35
    factor          go to state 36
    exponent        go to state 37
    primary         go to state 38


State 61

   34 and_expression: and_expression ANDOP • not_expression

    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    NOTOP         shift, and go to state 23
    '('           shift, and go to state 27

    not_expression  go to state 76
    relation        go to state 34
    term            go to state 35
    factor          go to state 36
    exponent        go to state 37
    primary         go to state 38


State 62

   38 relation: relation RELOP • term

    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    '('           shift, and go to state 27

    term      go to state 77
    factor    go to state 36
    exponent  go to state 37
    primary   go to state 38


State 63

   40 term: term ADDOP • factor

    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    '('           shift, and go to state 27

    factor    go to state 78
    exponent  go to state 37
    primary   go to state 38


State 64

   42 factor: factor MULOP • exponent

    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    '('           shift, and go to state 27

    exponent  go to state 79
    primary   go to state 38


State 65

   43 factor: factor REMOP • exponent

    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    '('           shift, and go to state 27

    exponent  go to state 80
    primary   go to state 38


State 66

   45 exponent: exponent EXPOP • primary

    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    '('           shift, and go to state 27

    primary  go to state 81


State 67

    2 function_header: FUNCTION IDENTIFIER parameters RETURNS type ';' •

    $default  reduce using rule 2 (function_header)


State 68

    6 optional_parameter: optional_parameter ',' parameter •

    $default  reduce using rule 6 (optional_parameter)


State 69

   10 variable: IDENTIFIER ':' type IS • statement_

    error         shift, and go to state 18
    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    NOTOP         shift, and go to state 23
    REDUCE        shift, and go to state 24
    IF            shift, and go to state 25
    CASE          shift, and go to state 26
    '('           shift, and go to state 27

    statement_      go to state 82
    statement       go to state 29
    expression      go to state 30
    or_expression   go to state 31
    and_expression  go to state 32
    not_expression  go to state 33
    relation        go to state 34
    term            go to state 35
    factor          go to state 36
    exponent        go to state 37
    primary         go to state 38


State 70

   18 statement: REDUCE operator reductions • ENDREDUCE
   29 reductions: reductions • statement_

    error         shift, and go to state 18
    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    NOTOP         shift, and go to state 23
    ENDREDUCE     shift, and go to state 83
    REDUCE        shift, and go to state 24
    IF            shift, and go to state 25
    CASE          shift, and go to state 26
    '('           shift, and go to state 27

    statement_      go to state 84
    statement       go to state 29
    expression      go to state 30
    or_expression   go to state 31
    and_expression  go to state 32
    not_expression  go to state 33
    relation        go to state 34
    term            go to state 35
    factor          go to state 36
    exponent        go to state 37
    primary         go to state 38


State 71

   19 statement: IF expression THEN • statement_ ELSE statement_ ENDIF

    error         shift, and go to state 18
    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    NOTOP         shift, and go to state 23
    REDUCE        shift, and go to state 24
    IF            shift, and go to state 25
    CASE          shift, and go to state 26
    '('           shift, and go to state 27

    statement_      go to state 85
    statement       go to state 29
    expression      go to state 30
    or_expression   go to state 31
    and_expression  go to state 32
    not_expression  go to state 33
    relation        go to state 34
    term            go to state 35
    factor          go to state 36
    exponent        go to state 37
    primary         go to state 38


State 72

   20 statement: CASE expression IS • optional_case OTHERS ARROW statement_ ENDCASE

    $default  reduce using rule 22 (optional_case)

    optional_case  go to state 86


State 73

   47 primary: '(' expression ')' •

    $default  reduce using rule 47 (primary)


State 74

   14 body: BEGIN_ statement_ END ';' •

    $default  reduce using rule 14 (body)


State 75

   32 or_expression: or_expression OROP and_expression •
   34 and_expression: and_expression • ANDOP not_expression

    ANDOP  shift, and go to state 61

    $default  reduce using rule 32 (or_expression)


State 76

   34 and_expression: and_expression ANDOP not_expression •

    $default  reduce using rule 34 (and_expression)


State 77

   38 relation: relation RELOP term •
   40 term: term • ADDOP factor

    ADDOP  shift, and go to state 63

    $default  reduce using rule 38 (relation)


State 78

   40 term: term ADDOP factor •
   42 factor: factor • MULOP exponent
   43       | factor • REMOP exponent

    MULOP  shift, and go to state 64
    REMOP  shift, and go to state 65

    $default  reduce using rule 40 (term)


State 79

   42 factor: factor MULOP exponent •
   45 exponent: exponent • EXPOP primary

    EXPOP  shift, and go to state 66

    $default  reduce using rule 42 (factor)


State 80

   43 factor: factor REMOP exponent •
   45 exponent: exponent • EXPOP primary

    EXPOP  shift, and go to state 66

    $default  reduce using rule 43 (factor)


State 81

   45 exponent: exponent EXPOP primary •

    $default  reduce using rule 45 (exponent)


State 82

   10 variable: IDENTIFIER ':' type IS statement_ •

    $default  reduce using rule 10 (variable)


State 83

   18 statement: REDUCE operator reductions ENDREDUCE •

    $default  reduce using rule 18 (statement)


State 84

   29 reductions: reductions statement_ •

    $default  reduce using rule 29 (reductions)


State 85

   19 statement: IF expression THEN statement_ • ELSE statement_ ENDIF

    ELSE  shift, and go to state 87


State 86

   20 statement: CASE expression IS optional_case • OTHERS ARROW statement_ ENDCASE
   21 optional_case: optional_case • WHEN INT_LITERAL ARROW statement_

    OTHERS  shift, and go to state 88
    WHEN    shift, and go to state 89


State 87

   19 statement: IF expression THEN statement_ ELSE • statement_ ENDIF

    error         shift, and go to state 18
    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    NOTOP         shift, and go to state 23
    REDUCE        shift, and go to state 24
    IF            shift, and go to state 25
    CASE          shift, and go to state 26
    '('           shift, and go to state 27

    statement_      go to state 90
    statement       go to state 29
    expression      go to state 30
    or_expression   go to state 31
    and_expression  go to state 32
    not_expression  go to state 33
    relation        go to state 34
    term            go to state 35
    factor          go to state 36
    exponent        go to state 37
    primary         go to state 38


State 88

   20 statement: CASE expression IS optional_case OTHERS • ARROW statement_ ENDCASE

    ARROW  shift, and go to state 91


State 89

   21 optional_case: optional_case WHEN • INT_LITERAL ARROW statement_

    INT_LITERAL  shift, and go to state 92


State 90

   19 statement: IF expression THEN statement_ ELSE statement_ • ENDIF

    ENDIF  shift, and go to state 93


State 91

   20 statement: CASE expression IS optional_case OTHERS ARROW • statement_ ENDCASE

    error         shift, and go to state 18
    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    NOTOP         shift, and go to state 23
    REDUCE        shift, and go to state 24
    IF            shift, and go to state 25
    CASE          shift, and go to state 26
    '('           shift, and go to state 27

    statement_      go to state 94
    statement       go to state 29
    expression      go to state 30
    or_expression   go to state 31
    and_expression  go to state 32
    not_expression  go to state 33
    relation        go to state 34
    term            go to state 35
    factor          go to state 36
    exponent        go to state 37
    primary         go to state 38


State 92

   21 optional_case: optional_case WHEN INT_LITERAL • ARROW statement_

    ARROW  shift, and go to state 95


State 93

   19 statement: IF expression THEN statement_ ELSE statement_ ENDIF •

    $default  reduce using rule 19 (statement)


State 94

   20 statement: CASE expression IS optional_case OTHERS ARROW statement_ • ENDCASE

    ENDCASE  shift, and go to state 96


State 95

   21 optional_case: optional_case WHEN INT_LITERAL ARROW • statement_

    error         shift, and go to state 18
    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    NOTOP         shift, and go to state 23
    REDUCE        shift, and go to state 24
    IF            shift, and go to state 25
    CASE          shift, and go to state 26
    '('           shift, and go to state 27

    statement_      go to state 97
    statement       go to state 29
    expression      go to state 30
    or_expression   go to state 31
    and_expression  go to state 32
    not_expression  go to state 33
    relation        go to state 34
    term            go to state 35
    factor          go to state 36
    exponent        go to state 37
    primary         go to state 38


State 96

   20 statement: CASE expression IS optional_case OTHERS ARROW statement_ ENDCASE •

    $default  reduce using rule 20 (statement)


State 97

   21 optional_case: optional_case WHEN INT_LITERAL ARROW statement_ •

    $default  reduce using rule 21 (optional_case)
