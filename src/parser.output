Grammar

    0 $accept: function $end

    1 function: function_header optional_variable body

    2 function_header: FUNCTION IDENTIFIER parameters RETURNS type ';'
    3                | error ';'

    4 parameters: parameter optional_parameter
    5           | ε

    6 parameter: IDENTIFIER ':' type

    7 optional_parameter: optional_parameter ',' parameter
    8                   | ε

    9 optional_variable: optional_variable variable
   10                  | ε

   11 variable: IDENTIFIER ':' type IS statement_
   12         | error ';'

   13 type: INTEGER
   14     | BOOLEAN
   15     | REAL

   16 body: BEGIN_ statement_ END ';'

   17 statement_: statement ';'
   18           | error ';'

   19 statement: expression
   20          | REDUCE operator reductions ENDREDUCE
   21          | IF expression THEN statement_ ELSE statement_ ENDIF
   22          | CASE expression IS optional_case OTHERS ARROW statement_ ENDCASE

   23 optional_case: optional_case WHEN INT_LITERAL ARROW statement_
   24              | ε

   25 operator: ADDOP
   26         | MULOP
   27         | REMOP
   28         | EXPOP
   29         | OROP
   30         | ANDOP

   31 reductions: reductions statement_
   32           | ε

   33 expression: or_expression

   34 or_expression: or_expression OROP and_expression
   35              | and_expression

   36 and_expression: and_expression ANDOP not_expression
   37               | not_expression

   38 not_expression: NOTOP not_expression
   39               | relation

   40 relation: relation RELOP term
   41         | term

   42 term: term ADDOP factor
   43     | factor

   44 factor: factor MULOP exponent
   45       | factor REMOP exponent
   46       | exponent

   47 exponent: exponent EXPOP primary
   48         | primary

   49 primary: '(' expression ')'
   50        | INT_LITERAL
   51        | REAL_LITERAL
   52        | BOOL_LITERAL
   53        | IDENTIFIER


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 49
    ')' (41) 49
    ',' (44) 7
    ':' (58) 6 11
    ';' (59) 2 3 12 16 17 18
    error (256) 3 12 18
    IDENTIFIER (258) 2 6 11 53
    INT_LITERAL (259) 23 50
    REAL_LITERAL (260) 51
    BOOL_LITERAL (261) 52
    ADDOP (262) 25 42
    MULOP (263) 26 44
    RELOP (264) 40
    ANDOP (265) 30 36
    OROP (266) 29 34
    NOTOP (267) 38
    ARROW (268) 22 23
    EXPOP (269) 28 47
    REMOP (270) 27 45
    BEGIN_ (271) 16
    BOOLEAN (272) 14
    END (273) 16
    ENDREDUCE (274) 20
    FUNCTION (275) 2
    INTEGER (276) 13
    IS (277) 11 22
    REDUCE (278) 20
    RETURNS (279) 2
    IF (280) 21
    ELSE (281) 21
    THEN (282) 21
    ENDIF (283) 21
    CASE (284) 22
    ENDCASE (285) 22
    OTHERS (286) 22
    REAL (287) 15
    WHEN (288) 23


Nonterminals, with rules where they appear

    $accept (39)
        on left: 0
    function (40)
        on left: 1
        on right: 0
    function_header (41)
        on left: 2 3
        on right: 1
    parameters (42)
        on left: 4 5
        on right: 2
    parameter (43)
        on left: 6
        on right: 4 7
    optional_parameter (44)
        on left: 7 8
        on right: 4 7
    optional_variable (45)
        on left: 9 10
        on right: 1 9
    variable (46)
        on left: 11 12
        on right: 9
    type (47)
        on left: 13 14 15
        on right: 2 6 11
    body (48)
        on left: 16
        on right: 1
    statement_ (49)
        on left: 17 18
        on right: 11 16 21 22 23 31
    statement (50)
        on left: 19 20 21 22
        on right: 17
    optional_case (51)
        on left: 23 24
        on right: 22 23
    operator (52)
        on left: 25 26 27 28 29 30
        on right: 20
    reductions (53)
        on left: 31 32
        on right: 20 31
    expression (54)
        on left: 33
        on right: 19 21 22 49
    or_expression (55)
        on left: 34 35
        on right: 33 34
    and_expression (56)
        on left: 36 37
        on right: 34 35 36
    not_expression (57)
        on left: 38 39
        on right: 36 37 38
    relation (58)
        on left: 40 41
        on right: 39 40
    term (59)
        on left: 42 43
        on right: 40 41 42
    factor (60)
        on left: 44 45 46
        on right: 42 43 44 45
    exponent (61)
        on left: 47 48
        on right: 44 45 46 47
    primary (62)
        on left: 49 50 51 52 53
        on right: 47 48


State 0

    0 $accept: • function $end

    error     shift, and go to state 1
    FUNCTION  shift, and go to state 2

    function         go to state 3
    function_header  go to state 4


State 1

    3 function_header: error • ';'

    ';'  shift, and go to state 5


State 2

    2 function_header: FUNCTION • IDENTIFIER parameters RETURNS type ';'

    IDENTIFIER  shift, and go to state 6


State 3

    0 $accept: function • $end

    $end  shift, and go to state 7


State 4

    1 function: function_header • optional_variable body

    $default  reduce using rule 10 (optional_variable)

    optional_variable  go to state 8


State 5

    3 function_header: error ';' •

    $default  reduce using rule 3 (function_header)


State 6

    2 function_header: FUNCTION IDENTIFIER • parameters RETURNS type ';'

    IDENTIFIER  shift, and go to state 9

    $default  reduce using rule 5 (parameters)

    parameters  go to state 10
    parameter   go to state 11


State 7

    0 $accept: function $end •

    $default  accept


State 8

    1 function: function_header optional_variable • body
    9 optional_variable: optional_variable • variable

    error       shift, and go to state 12
    IDENTIFIER  shift, and go to state 13
    BEGIN_      shift, and go to state 14

    variable  go to state 15
    body      go to state 16


State 9

    6 parameter: IDENTIFIER • ':' type

    ':'  shift, and go to state 17


State 10

    2 function_header: FUNCTION IDENTIFIER parameters • RETURNS type ';'

    RETURNS  shift, and go to state 18


State 11

    4 parameters: parameter • optional_parameter

    $default  reduce using rule 8 (optional_parameter)

    optional_parameter  go to state 19


State 12

   12 variable: error • ';'

    ';'  shift, and go to state 20


State 13

   11 variable: IDENTIFIER • ':' type IS statement_

    ':'  shift, and go to state 21


State 14

   16 body: BEGIN_ • statement_ END ';'

    error         shift, and go to state 22
    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    NOTOP         shift, and go to state 27
    REDUCE        shift, and go to state 28
    IF            shift, and go to state 29
    CASE          shift, and go to state 30
    '('           shift, and go to state 31

    statement_      go to state 32
    statement       go to state 33
    expression      go to state 34
    or_expression   go to state 35
    and_expression  go to state 36
    not_expression  go to state 37
    relation        go to state 38
    term            go to state 39
    factor          go to state 40
    exponent        go to state 41
    primary         go to state 42


State 15

    9 optional_variable: optional_variable variable •

    $default  reduce using rule 9 (optional_variable)


State 16

    1 function: function_header optional_variable body •

    $default  reduce using rule 1 (function)


State 17

    6 parameter: IDENTIFIER ':' • type

    BOOLEAN  shift, and go to state 43
    INTEGER  shift, and go to state 44
    REAL     shift, and go to state 45

    type  go to state 46


State 18

    2 function_header: FUNCTION IDENTIFIER parameters RETURNS • type ';'

    BOOLEAN  shift, and go to state 43
    INTEGER  shift, and go to state 44
    REAL     shift, and go to state 45

    type  go to state 47


State 19

    4 parameters: parameter optional_parameter •
    7 optional_parameter: optional_parameter • ',' parameter

    ','  shift, and go to state 48

    $default  reduce using rule 4 (parameters)


State 20

   12 variable: error ';' •

    $default  reduce using rule 12 (variable)


State 21

   11 variable: IDENTIFIER ':' • type IS statement_

    BOOLEAN  shift, and go to state 43
    INTEGER  shift, and go to state 44
    REAL     shift, and go to state 45

    type  go to state 49


State 22

   18 statement_: error • ';'

    ';'  shift, and go to state 50


State 23

   53 primary: IDENTIFIER •

    $default  reduce using rule 53 (primary)


State 24

   50 primary: INT_LITERAL •

    $default  reduce using rule 50 (primary)


State 25

   51 primary: REAL_LITERAL •

    $default  reduce using rule 51 (primary)


State 26

   52 primary: BOOL_LITERAL •

    $default  reduce using rule 52 (primary)


State 27

   38 not_expression: NOTOP • not_expression

    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    NOTOP         shift, and go to state 27
    '('           shift, and go to state 31

    not_expression  go to state 51
    relation        go to state 38
    term            go to state 39
    factor          go to state 40
    exponent        go to state 41
    primary         go to state 42


State 28

   20 statement: REDUCE • operator reductions ENDREDUCE

    ADDOP  shift, and go to state 52
    MULOP  shift, and go to state 53
    ANDOP  shift, and go to state 54
    OROP   shift, and go to state 55
    EXPOP  shift, and go to state 56
    REMOP  shift, and go to state 57

    operator  go to state 58


State 29

   21 statement: IF • expression THEN statement_ ELSE statement_ ENDIF

    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    NOTOP         shift, and go to state 27
    '('           shift, and go to state 31

    expression      go to state 59
    or_expression   go to state 35
    and_expression  go to state 36
    not_expression  go to state 37
    relation        go to state 38
    term            go to state 39
    factor          go to state 40
    exponent        go to state 41
    primary         go to state 42


State 30

   22 statement: CASE • expression IS optional_case OTHERS ARROW statement_ ENDCASE

    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    NOTOP         shift, and go to state 27
    '('           shift, and go to state 31

    expression      go to state 60
    or_expression   go to state 35
    and_expression  go to state 36
    not_expression  go to state 37
    relation        go to state 38
    term            go to state 39
    factor          go to state 40
    exponent        go to state 41
    primary         go to state 42


State 31

   49 primary: '(' • expression ')'

    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    NOTOP         shift, and go to state 27
    '('           shift, and go to state 31

    expression      go to state 61
    or_expression   go to state 35
    and_expression  go to state 36
    not_expression  go to state 37
    relation        go to state 38
    term            go to state 39
    factor          go to state 40
    exponent        go to state 41
    primary         go to state 42


State 32

   16 body: BEGIN_ statement_ • END ';'

    END  shift, and go to state 62


State 33

   17 statement_: statement • ';'

    ';'  shift, and go to state 63


State 34

   19 statement: expression •

    $default  reduce using rule 19 (statement)


State 35

   33 expression: or_expression •
   34 or_expression: or_expression • OROP and_expression

    OROP  shift, and go to state 64

    $default  reduce using rule 33 (expression)


State 36

   35 or_expression: and_expression •
   36 and_expression: and_expression • ANDOP not_expression

    ANDOP  shift, and go to state 65

    $default  reduce using rule 35 (or_expression)


State 37

   37 and_expression: not_expression •

    $default  reduce using rule 37 (and_expression)


State 38

   39 not_expression: relation •
   40 relation: relation • RELOP term

    RELOP  shift, and go to state 66

    $default  reduce using rule 39 (not_expression)


State 39

   41 relation: term •
   42 term: term • ADDOP factor

    ADDOP  shift, and go to state 67

    $default  reduce using rule 41 (relation)


State 40

   43 term: factor •
   44 factor: factor • MULOP exponent
   45       | factor • REMOP exponent

    MULOP  shift, and go to state 68
    REMOP  shift, and go to state 69

    $default  reduce using rule 43 (term)


State 41

   46 factor: exponent •
   47 exponent: exponent • EXPOP primary

    EXPOP  shift, and go to state 70

    $default  reduce using rule 46 (factor)


State 42

   48 exponent: primary •

    $default  reduce using rule 48 (exponent)


State 43

   14 type: BOOLEAN •

    $default  reduce using rule 14 (type)


State 44

   13 type: INTEGER •

    $default  reduce using rule 13 (type)


State 45

   15 type: REAL •

    $default  reduce using rule 15 (type)


State 46

    6 parameter: IDENTIFIER ':' type •

    $default  reduce using rule 6 (parameter)


State 47

    2 function_header: FUNCTION IDENTIFIER parameters RETURNS type • ';'

    ';'  shift, and go to state 71


State 48

    7 optional_parameter: optional_parameter ',' • parameter

    IDENTIFIER  shift, and go to state 9

    parameter  go to state 72


State 49

   11 variable: IDENTIFIER ':' type • IS statement_

    IS  shift, and go to state 73


State 50

   18 statement_: error ';' •

    $default  reduce using rule 18 (statement_)


State 51

   38 not_expression: NOTOP not_expression •

    $default  reduce using rule 38 (not_expression)


State 52

   25 operator: ADDOP •

    $default  reduce using rule 25 (operator)


State 53

   26 operator: MULOP •

    $default  reduce using rule 26 (operator)


State 54

   30 operator: ANDOP •

    $default  reduce using rule 30 (operator)


State 55

   29 operator: OROP •

    $default  reduce using rule 29 (operator)


State 56

   28 operator: EXPOP •

    $default  reduce using rule 28 (operator)


State 57

   27 operator: REMOP •

    $default  reduce using rule 27 (operator)


State 58

   20 statement: REDUCE operator • reductions ENDREDUCE

    $default  reduce using rule 32 (reductions)

    reductions  go to state 74


State 59

   21 statement: IF expression • THEN statement_ ELSE statement_ ENDIF

    THEN  shift, and go to state 75


State 60

   22 statement: CASE expression • IS optional_case OTHERS ARROW statement_ ENDCASE

    IS  shift, and go to state 76


State 61

   49 primary: '(' expression • ')'

    ')'  shift, and go to state 77


State 62

   16 body: BEGIN_ statement_ END • ';'

    ';'  shift, and go to state 78


State 63

   17 statement_: statement ';' •

    $default  reduce using rule 17 (statement_)


State 64

   34 or_expression: or_expression OROP • and_expression

    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    NOTOP         shift, and go to state 27
    '('           shift, and go to state 31

    and_expression  go to state 79
    not_expression  go to state 37
    relation        go to state 38
    term            go to state 39
    factor          go to state 40
    exponent        go to state 41
    primary         go to state 42


State 65

   36 and_expression: and_expression ANDOP • not_expression

    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    NOTOP         shift, and go to state 27
    '('           shift, and go to state 31

    not_expression  go to state 80
    relation        go to state 38
    term            go to state 39
    factor          go to state 40
    exponent        go to state 41
    primary         go to state 42


State 66

   40 relation: relation RELOP • term

    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    '('           shift, and go to state 31

    term      go to state 81
    factor    go to state 40
    exponent  go to state 41
    primary   go to state 42


State 67

   42 term: term ADDOP • factor

    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    '('           shift, and go to state 31

    factor    go to state 82
    exponent  go to state 41
    primary   go to state 42


State 68

   44 factor: factor MULOP • exponent

    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    '('           shift, and go to state 31

    exponent  go to state 83
    primary   go to state 42


State 69

   45 factor: factor REMOP • exponent

    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    '('           shift, and go to state 31

    exponent  go to state 84
    primary   go to state 42


State 70

   47 exponent: exponent EXPOP • primary

    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    '('           shift, and go to state 31

    primary  go to state 85


State 71

    2 function_header: FUNCTION IDENTIFIER parameters RETURNS type ';' •

    $default  reduce using rule 2 (function_header)


State 72

    7 optional_parameter: optional_parameter ',' parameter •

    $default  reduce using rule 7 (optional_parameter)


State 73

   11 variable: IDENTIFIER ':' type IS • statement_

    error         shift, and go to state 22
    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    NOTOP         shift, and go to state 27
    REDUCE        shift, and go to state 28
    IF            shift, and go to state 29
    CASE          shift, and go to state 30
    '('           shift, and go to state 31

    statement_      go to state 86
    statement       go to state 33
    expression      go to state 34
    or_expression   go to state 35
    and_expression  go to state 36
    not_expression  go to state 37
    relation        go to state 38
    term            go to state 39
    factor          go to state 40
    exponent        go to state 41
    primary         go to state 42


State 74

   20 statement: REDUCE operator reductions • ENDREDUCE
   31 reductions: reductions • statement_

    error         shift, and go to state 22
    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    NOTOP         shift, and go to state 27
    ENDREDUCE     shift, and go to state 87
    REDUCE        shift, and go to state 28
    IF            shift, and go to state 29
    CASE          shift, and go to state 30
    '('           shift, and go to state 31

    statement_      go to state 88
    statement       go to state 33
    expression      go to state 34
    or_expression   go to state 35
    and_expression  go to state 36
    not_expression  go to state 37
    relation        go to state 38
    term            go to state 39
    factor          go to state 40
    exponent        go to state 41
    primary         go to state 42


State 75

   21 statement: IF expression THEN • statement_ ELSE statement_ ENDIF

    error         shift, and go to state 22
    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    NOTOP         shift, and go to state 27
    REDUCE        shift, and go to state 28
    IF            shift, and go to state 29
    CASE          shift, and go to state 30
    '('           shift, and go to state 31

    statement_      go to state 89
    statement       go to state 33
    expression      go to state 34
    or_expression   go to state 35
    and_expression  go to state 36
    not_expression  go to state 37
    relation        go to state 38
    term            go to state 39
    factor          go to state 40
    exponent        go to state 41
    primary         go to state 42


State 76

   22 statement: CASE expression IS • optional_case OTHERS ARROW statement_ ENDCASE

    $default  reduce using rule 24 (optional_case)

    optional_case  go to state 90


State 77

   49 primary: '(' expression ')' •

    $default  reduce using rule 49 (primary)


State 78

   16 body: BEGIN_ statement_ END ';' •

    $default  reduce using rule 16 (body)


State 79

   34 or_expression: or_expression OROP and_expression •
   36 and_expression: and_expression • ANDOP not_expression

    ANDOP  shift, and go to state 65

    $default  reduce using rule 34 (or_expression)


State 80

   36 and_expression: and_expression ANDOP not_expression •

    $default  reduce using rule 36 (and_expression)


State 81

   40 relation: relation RELOP term •
   42 term: term • ADDOP factor

    ADDOP  shift, and go to state 67

    $default  reduce using rule 40 (relation)


State 82

   42 term: term ADDOP factor •
   44 factor: factor • MULOP exponent
   45       | factor • REMOP exponent

    MULOP  shift, and go to state 68
    REMOP  shift, and go to state 69

    $default  reduce using rule 42 (term)


State 83

   44 factor: factor MULOP exponent •
   47 exponent: exponent • EXPOP primary

    EXPOP  shift, and go to state 70

    $default  reduce using rule 44 (factor)


State 84

   45 factor: factor REMOP exponent •
   47 exponent: exponent • EXPOP primary

    EXPOP  shift, and go to state 70

    $default  reduce using rule 45 (factor)


State 85

   47 exponent: exponent EXPOP primary •

    $default  reduce using rule 47 (exponent)


State 86

   11 variable: IDENTIFIER ':' type IS statement_ •

    $default  reduce using rule 11 (variable)


State 87

   20 statement: REDUCE operator reductions ENDREDUCE •

    $default  reduce using rule 20 (statement)


State 88

   31 reductions: reductions statement_ •

    $default  reduce using rule 31 (reductions)


State 89

   21 statement: IF expression THEN statement_ • ELSE statement_ ENDIF

    ELSE  shift, and go to state 91


State 90

   22 statement: CASE expression IS optional_case • OTHERS ARROW statement_ ENDCASE
   23 optional_case: optional_case • WHEN INT_LITERAL ARROW statement_

    OTHERS  shift, and go to state 92
    WHEN    shift, and go to state 93


State 91

   21 statement: IF expression THEN statement_ ELSE • statement_ ENDIF

    error         shift, and go to state 22
    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    NOTOP         shift, and go to state 27
    REDUCE        shift, and go to state 28
    IF            shift, and go to state 29
    CASE          shift, and go to state 30
    '('           shift, and go to state 31

    statement_      go to state 94
    statement       go to state 33
    expression      go to state 34
    or_expression   go to state 35
    and_expression  go to state 36
    not_expression  go to state 37
    relation        go to state 38
    term            go to state 39
    factor          go to state 40
    exponent        go to state 41
    primary         go to state 42


State 92

   22 statement: CASE expression IS optional_case OTHERS • ARROW statement_ ENDCASE

    ARROW  shift, and go to state 95


State 93

   23 optional_case: optional_case WHEN • INT_LITERAL ARROW statement_

    INT_LITERAL  shift, and go to state 96


State 94

   21 statement: IF expression THEN statement_ ELSE statement_ • ENDIF

    ENDIF  shift, and go to state 97


State 95

   22 statement: CASE expression IS optional_case OTHERS ARROW • statement_ ENDCASE

    error         shift, and go to state 22
    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    NOTOP         shift, and go to state 27
    REDUCE        shift, and go to state 28
    IF            shift, and go to state 29
    CASE          shift, and go to state 30
    '('           shift, and go to state 31

    statement_      go to state 98
    statement       go to state 33
    expression      go to state 34
    or_expression   go to state 35
    and_expression  go to state 36
    not_expression  go to state 37
    relation        go to state 38
    term            go to state 39
    factor          go to state 40
    exponent        go to state 41
    primary         go to state 42


State 96

   23 optional_case: optional_case WHEN INT_LITERAL • ARROW statement_

    ARROW  shift, and go to state 99


State 97

   21 statement: IF expression THEN statement_ ELSE statement_ ENDIF •

    $default  reduce using rule 21 (statement)


State 98

   22 statement: CASE expression IS optional_case OTHERS ARROW statement_ • ENDCASE

    ENDCASE  shift, and go to state 100


State 99

   23 optional_case: optional_case WHEN INT_LITERAL ARROW • statement_

    error         shift, and go to state 22
    IDENTIFIER    shift, and go to state 23
    INT_LITERAL   shift, and go to state 24
    REAL_LITERAL  shift, and go to state 25
    BOOL_LITERAL  shift, and go to state 26
    NOTOP         shift, and go to state 27
    REDUCE        shift, and go to state 28
    IF            shift, and go to state 29
    CASE          shift, and go to state 30
    '('           shift, and go to state 31

    statement_      go to state 101
    statement       go to state 33
    expression      go to state 34
    or_expression   go to state 35
    and_expression  go to state 36
    not_expression  go to state 37
    relation        go to state 38
    term            go to state 39
    factor          go to state 40
    exponent        go to state 41
    primary         go to state 42


State 100

   22 statement: CASE expression IS optional_case OTHERS ARROW statement_ ENDCASE •

    $default  reduce using rule 22 (statement)


State 101

   23 optional_case: optional_case WHEN INT_LITERAL ARROW statement_ •

    $default  reduce using rule 23 (optional_case)
