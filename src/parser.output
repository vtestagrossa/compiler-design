Terminals unused in grammar

    OROP
    NOTOP
    EXPOP
    REMOP


Grammar

    0 $accept: function $end

    1 function: function_header optional_variable body

    2 function_header: FUNCTION IDENTIFIER RETURNS type ';'

    3 optional_variable: variable
    4                  | ε

    5 variable: IDENTIFIER ':' type IS statement_

    6 type: INTEGER
    7     | BOOLEAN
    8     | REAL

    9 body: BEGIN_ statement_ END ';'

   10 statement_: statement ';'
   11           | error ';'

   12 statement: expression
   13          | REDUCE operator reductions ENDREDUCE
   14          | IF expression THEN statement_ ELSE statement_ ENDIF
   15          | CASE expression IS optional_case OTHERS ARROW statement_ ENDCASE

   16 optional_case: optional_case WHEN INT_LITERAL ARROW statement_
   17              | ε

   18 operator: ADDOP
   19         | MULOP

   20 reductions: reductions statement_
   21           | ε

   22 expression: expression ANDOP relation
   23           | relation

   24 relation: relation RELOP term
   25         | term

   26 term: term ADDOP factor
   27     | factor

   28 factor: factor MULOP primary
   29       | primary

   30 primary: '(' expression ')'
   31        | INT_LITERAL
   32        | REAL_LITERAL
   33        | BOOL_LITERAL
   34        | IDENTIFIER


Terminals, with rules where they appear

    $end (0) 0
    '(' (40) 30
    ')' (41) 30
    ':' (58) 5
    ';' (59) 2 9 10 11
    error (256) 11
    IDENTIFIER (258) 2 5 34
    INT_LITERAL (259) 16 31
    REAL_LITERAL (260) 32
    BOOL_LITERAL (261) 33
    ADDOP (262) 18 26
    MULOP (263) 19 28
    RELOP (264) 24
    ANDOP (265) 22
    OROP (266)
    NOTOP (267)
    ARROW (268) 15 16
    EXPOP (269)
    REMOP (270)
    BEGIN_ (271) 9
    BOOLEAN (272) 7
    END (273) 9
    ENDREDUCE (274) 13
    FUNCTION (275) 2
    INTEGER (276) 6
    IS (277) 5 15
    REDUCE (278) 13
    RETURNS (279) 2
    IF (280) 14
    ELSE (281) 14
    THEN (282) 14
    ENDIF (283) 14
    CASE (284) 15
    ENDCASE (285) 15
    OTHERS (286) 15
    REAL (287) 8
    WHEN (288) 16


Nonterminals, with rules where they appear

    $accept (38)
        on left: 0
    function (39)
        on left: 1
        on right: 0
    function_header (40)
        on left: 2
        on right: 1
    optional_variable (41)
        on left: 3 4
        on right: 1
    variable (42)
        on left: 5
        on right: 3
    type (43)
        on left: 6 7 8
        on right: 2 5
    body (44)
        on left: 9
        on right: 1
    statement_ (45)
        on left: 10 11
        on right: 5 9 14 15 16 20
    statement (46)
        on left: 12 13 14 15
        on right: 10
    optional_case (47)
        on left: 16 17
        on right: 15 16
    operator (48)
        on left: 18 19
        on right: 13
    reductions (49)
        on left: 20 21
        on right: 13 20
    expression (50)
        on left: 22 23
        on right: 12 14 15 22 30
    relation (51)
        on left: 24 25
        on right: 22 23 24
    term (52)
        on left: 26 27
        on right: 24 25 26
    factor (53)
        on left: 28 29
        on right: 26 27 28
    primary (54)
        on left: 30 31 32 33 34
        on right: 28 29


State 0

    0 $accept: • function $end

    FUNCTION  shift, and go to state 1

    function         go to state 2
    function_header  go to state 3


State 1

    2 function_header: FUNCTION • IDENTIFIER RETURNS type ';'

    IDENTIFIER  shift, and go to state 4


State 2

    0 $accept: function • $end

    $end  shift, and go to state 5


State 3

    1 function: function_header • optional_variable body

    IDENTIFIER  shift, and go to state 6

    $default  reduce using rule 4 (optional_variable)

    optional_variable  go to state 7
    variable           go to state 8


State 4

    2 function_header: FUNCTION IDENTIFIER • RETURNS type ';'

    RETURNS  shift, and go to state 9


State 5

    0 $accept: function $end •

    $default  accept


State 6

    5 variable: IDENTIFIER • ':' type IS statement_

    ':'  shift, and go to state 10


State 7

    1 function: function_header optional_variable • body

    BEGIN_  shift, and go to state 11

    body  go to state 12


State 8

    3 optional_variable: variable •

    $default  reduce using rule 3 (optional_variable)


State 9

    2 function_header: FUNCTION IDENTIFIER RETURNS • type ';'

    BOOLEAN  shift, and go to state 13
    INTEGER  shift, and go to state 14
    REAL     shift, and go to state 15

    type  go to state 16


State 10

    5 variable: IDENTIFIER ':' • type IS statement_

    BOOLEAN  shift, and go to state 13
    INTEGER  shift, and go to state 14
    REAL     shift, and go to state 15

    type  go to state 17


State 11

    9 body: BEGIN_ • statement_ END ';'

    error         shift, and go to state 18
    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    REDUCE        shift, and go to state 23
    IF            shift, and go to state 24
    CASE          shift, and go to state 25
    '('           shift, and go to state 26

    statement_  go to state 27
    statement   go to state 28
    expression  go to state 29
    relation    go to state 30
    term        go to state 31
    factor      go to state 32
    primary     go to state 33


State 12

    1 function: function_header optional_variable body •

    $default  reduce using rule 1 (function)


State 13

    7 type: BOOLEAN •

    $default  reduce using rule 7 (type)


State 14

    6 type: INTEGER •

    $default  reduce using rule 6 (type)


State 15

    8 type: REAL •

    $default  reduce using rule 8 (type)


State 16

    2 function_header: FUNCTION IDENTIFIER RETURNS type • ';'

    ';'  shift, and go to state 34


State 17

    5 variable: IDENTIFIER ':' type • IS statement_

    IS  shift, and go to state 35


State 18

   11 statement_: error • ';'

    ';'  shift, and go to state 36


State 19

   34 primary: IDENTIFIER •

    $default  reduce using rule 34 (primary)


State 20

   31 primary: INT_LITERAL •

    $default  reduce using rule 31 (primary)


State 21

   32 primary: REAL_LITERAL •

    $default  reduce using rule 32 (primary)


State 22

   33 primary: BOOL_LITERAL •

    $default  reduce using rule 33 (primary)


State 23

   13 statement: REDUCE • operator reductions ENDREDUCE

    ADDOP  shift, and go to state 37
    MULOP  shift, and go to state 38

    operator  go to state 39


State 24

   14 statement: IF • expression THEN statement_ ELSE statement_ ENDIF

    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    '('           shift, and go to state 26

    expression  go to state 40
    relation    go to state 30
    term        go to state 31
    factor      go to state 32
    primary     go to state 33


State 25

   15 statement: CASE • expression IS optional_case OTHERS ARROW statement_ ENDCASE

    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    '('           shift, and go to state 26

    expression  go to state 41
    relation    go to state 30
    term        go to state 31
    factor      go to state 32
    primary     go to state 33


State 26

   30 primary: '(' • expression ')'

    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    '('           shift, and go to state 26

    expression  go to state 42
    relation    go to state 30
    term        go to state 31
    factor      go to state 32
    primary     go to state 33


State 27

    9 body: BEGIN_ statement_ • END ';'

    END  shift, and go to state 43


State 28

   10 statement_: statement • ';'

    ';'  shift, and go to state 44


State 29

   12 statement: expression •
   22 expression: expression • ANDOP relation

    ANDOP  shift, and go to state 45

    $default  reduce using rule 12 (statement)


State 30

   23 expression: relation •
   24 relation: relation • RELOP term

    RELOP  shift, and go to state 46

    $default  reduce using rule 23 (expression)


State 31

   25 relation: term •
   26 term: term • ADDOP factor

    ADDOP  shift, and go to state 47

    $default  reduce using rule 25 (relation)


State 32

   27 term: factor •
   28 factor: factor • MULOP primary

    MULOP  shift, and go to state 48

    $default  reduce using rule 27 (term)


State 33

   29 factor: primary •

    $default  reduce using rule 29 (factor)


State 34

    2 function_header: FUNCTION IDENTIFIER RETURNS type ';' •

    $default  reduce using rule 2 (function_header)


State 35

    5 variable: IDENTIFIER ':' type IS • statement_

    error         shift, and go to state 18
    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    REDUCE        shift, and go to state 23
    IF            shift, and go to state 24
    CASE          shift, and go to state 25
    '('           shift, and go to state 26

    statement_  go to state 49
    statement   go to state 28
    expression  go to state 29
    relation    go to state 30
    term        go to state 31
    factor      go to state 32
    primary     go to state 33


State 36

   11 statement_: error ';' •

    $default  reduce using rule 11 (statement_)


State 37

   18 operator: ADDOP •

    $default  reduce using rule 18 (operator)


State 38

   19 operator: MULOP •

    $default  reduce using rule 19 (operator)


State 39

   13 statement: REDUCE operator • reductions ENDREDUCE

    $default  reduce using rule 21 (reductions)

    reductions  go to state 50


State 40

   14 statement: IF expression • THEN statement_ ELSE statement_ ENDIF
   22 expression: expression • ANDOP relation

    ANDOP  shift, and go to state 45
    THEN   shift, and go to state 51


State 41

   15 statement: CASE expression • IS optional_case OTHERS ARROW statement_ ENDCASE
   22 expression: expression • ANDOP relation

    ANDOP  shift, and go to state 45
    IS     shift, and go to state 52


State 42

   22 expression: expression • ANDOP relation
   30 primary: '(' expression • ')'

    ANDOP  shift, and go to state 45
    ')'    shift, and go to state 53


State 43

    9 body: BEGIN_ statement_ END • ';'

    ';'  shift, and go to state 54


State 44

   10 statement_: statement ';' •

    $default  reduce using rule 10 (statement_)


State 45

   22 expression: expression ANDOP • relation

    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    '('           shift, and go to state 26

    relation  go to state 55
    term      go to state 31
    factor    go to state 32
    primary   go to state 33


State 46

   24 relation: relation RELOP • term

    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    '('           shift, and go to state 26

    term     go to state 56
    factor   go to state 32
    primary  go to state 33


State 47

   26 term: term ADDOP • factor

    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    '('           shift, and go to state 26

    factor   go to state 57
    primary  go to state 33


State 48

   28 factor: factor MULOP • primary

    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    '('           shift, and go to state 26

    primary  go to state 58


State 49

    5 variable: IDENTIFIER ':' type IS statement_ •

    $default  reduce using rule 5 (variable)


State 50

   13 statement: REDUCE operator reductions • ENDREDUCE
   20 reductions: reductions • statement_

    error         shift, and go to state 18
    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    ENDREDUCE     shift, and go to state 59
    REDUCE        shift, and go to state 23
    IF            shift, and go to state 24
    CASE          shift, and go to state 25
    '('           shift, and go to state 26

    statement_  go to state 60
    statement   go to state 28
    expression  go to state 29
    relation    go to state 30
    term        go to state 31
    factor      go to state 32
    primary     go to state 33


State 51

   14 statement: IF expression THEN • statement_ ELSE statement_ ENDIF

    error         shift, and go to state 18
    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    REDUCE        shift, and go to state 23
    IF            shift, and go to state 24
    CASE          shift, and go to state 25
    '('           shift, and go to state 26

    statement_  go to state 61
    statement   go to state 28
    expression  go to state 29
    relation    go to state 30
    term        go to state 31
    factor      go to state 32
    primary     go to state 33


State 52

   15 statement: CASE expression IS • optional_case OTHERS ARROW statement_ ENDCASE

    $default  reduce using rule 17 (optional_case)

    optional_case  go to state 62


State 53

   30 primary: '(' expression ')' •

    $default  reduce using rule 30 (primary)


State 54

    9 body: BEGIN_ statement_ END ';' •

    $default  reduce using rule 9 (body)


State 55

   22 expression: expression ANDOP relation •
   24 relation: relation • RELOP term

    RELOP  shift, and go to state 46

    $default  reduce using rule 22 (expression)


State 56

   24 relation: relation RELOP term •
   26 term: term • ADDOP factor

    ADDOP  shift, and go to state 47

    $default  reduce using rule 24 (relation)


State 57

   26 term: term ADDOP factor •
   28 factor: factor • MULOP primary

    MULOP  shift, and go to state 48

    $default  reduce using rule 26 (term)


State 58

   28 factor: factor MULOP primary •

    $default  reduce using rule 28 (factor)


State 59

   13 statement: REDUCE operator reductions ENDREDUCE •

    $default  reduce using rule 13 (statement)


State 60

   20 reductions: reductions statement_ •

    $default  reduce using rule 20 (reductions)


State 61

   14 statement: IF expression THEN statement_ • ELSE statement_ ENDIF

    ELSE  shift, and go to state 63


State 62

   15 statement: CASE expression IS optional_case • OTHERS ARROW statement_ ENDCASE
   16 optional_case: optional_case • WHEN INT_LITERAL ARROW statement_

    OTHERS  shift, and go to state 64
    WHEN    shift, and go to state 65


State 63

   14 statement: IF expression THEN statement_ ELSE • statement_ ENDIF

    error         shift, and go to state 18
    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    REDUCE        shift, and go to state 23
    IF            shift, and go to state 24
    CASE          shift, and go to state 25
    '('           shift, and go to state 26

    statement_  go to state 66
    statement   go to state 28
    expression  go to state 29
    relation    go to state 30
    term        go to state 31
    factor      go to state 32
    primary     go to state 33


State 64

   15 statement: CASE expression IS optional_case OTHERS • ARROW statement_ ENDCASE

    ARROW  shift, and go to state 67


State 65

   16 optional_case: optional_case WHEN • INT_LITERAL ARROW statement_

    INT_LITERAL  shift, and go to state 68


State 66

   14 statement: IF expression THEN statement_ ELSE statement_ • ENDIF

    ENDIF  shift, and go to state 69


State 67

   15 statement: CASE expression IS optional_case OTHERS ARROW • statement_ ENDCASE

    error         shift, and go to state 18
    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    REDUCE        shift, and go to state 23
    IF            shift, and go to state 24
    CASE          shift, and go to state 25
    '('           shift, and go to state 26

    statement_  go to state 70
    statement   go to state 28
    expression  go to state 29
    relation    go to state 30
    term        go to state 31
    factor      go to state 32
    primary     go to state 33


State 68

   16 optional_case: optional_case WHEN INT_LITERAL • ARROW statement_

    ARROW  shift, and go to state 71


State 69

   14 statement: IF expression THEN statement_ ELSE statement_ ENDIF •

    $default  reduce using rule 14 (statement)


State 70

   15 statement: CASE expression IS optional_case OTHERS ARROW statement_ • ENDCASE

    ENDCASE  shift, and go to state 72


State 71

   16 optional_case: optional_case WHEN INT_LITERAL ARROW • statement_

    error         shift, and go to state 18
    IDENTIFIER    shift, and go to state 19
    INT_LITERAL   shift, and go to state 20
    REAL_LITERAL  shift, and go to state 21
    BOOL_LITERAL  shift, and go to state 22
    REDUCE        shift, and go to state 23
    IF            shift, and go to state 24
    CASE          shift, and go to state 25
    '('           shift, and go to state 26

    statement_  go to state 73
    statement   go to state 28
    expression  go to state 29
    relation    go to state 30
    term        go to state 31
    factor      go to state 32
    primary     go to state 33


State 72

   15 statement: CASE expression IS optional_case OTHERS ARROW statement_ ENDCASE •

    $default  reduce using rule 15 (statement)


State 73

   16 optional_case: optional_case WHEN INT_LITERAL ARROW statement_ •

    $default  reduce using rule 16 (optional_case)
